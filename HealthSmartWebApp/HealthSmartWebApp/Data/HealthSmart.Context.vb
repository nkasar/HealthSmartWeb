'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class HealthSmartEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=HealthSmartEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Allergies() As DbSet(Of Allergy)
    Public Overridable Property AllergySeverities() As DbSet(Of AllergySeverity)
    Public Overridable Property AllergyTypes() As DbSet(Of AllergyType)
    Public Overridable Property Countries() As DbSet(Of Country)
    Public Overridable Property DBVersions() As DbSet(Of DBVersion)
    Public Overridable Property Diagnosis() As DbSet(Of Diagnosi)
    Public Overridable Property DiagnosisCategories() As DbSet(Of DiagnosisCategory)
    Public Overridable Property DiagnosticServiceSections() As DbSet(Of DiagnosticServiceSection)
    Public Overridable Property Disabilities() As DbSet(Of Disability)
    Public Overridable Property DocumentTypes() As DbSet(Of DocumentType)
    Public Overridable Property EmailMessages() As DbSet(Of EmailMessage)
    Public Overridable Property Genders() As DbSet(Of Gender)
    Public Overridable Property Habits() As DbSet(Of Habit)
    Public Overridable Property Hospitals() As DbSet(Of Hospital)
    Public Overridable Property HospitalLocations() As DbSet(Of HospitalLocation)
    Public Overridable Property HospitalSpecialities() As DbSet(Of HospitalSpeciality)
    Public Overridable Property Immunizations() As DbSet(Of Immunization)
    Public Overridable Property Insurances() As DbSet(Of Insurance)
    Public Overridable Property Laboratories() As DbSet(Of Laboratory)
    Public Overridable Property MaritialStatus() As DbSet(Of MaritialStatu)
    Public Overridable Property MedicalHistories() As DbSet(Of MedicalHistory)
    Public Overridable Property MedicalProcedures() As DbSet(Of MedicalProcedure)
    Public Overridable Property Medications() As DbSet(Of Medication)
    Public Overridable Property MedicationDetails() As DbSet(Of MedicationDetail)
    Public Overridable Property Occupations() As DbSet(Of Occupation)
    Public Overridable Property OccupationalHazzards() As DbSet(Of OccupationalHazzard)
    Public Overridable Property OtherHospitals() As DbSet(Of OtherHospital)
    Public Overridable Property PasswordSecurityQuestions() As DbSet(Of PasswordSecurityQuestion)
    Public Overridable Property Patients() As DbSet(Of Patient)
    Public Overridable Property PatientAllergies() As DbSet(Of PatientAllergy)
    Public Overridable Property PatientAssociatedParties() As DbSet(Of PatientAssociatedParty)
    Public Overridable Property PatientDemographics() As DbSet(Of PatientDemographic)
    Public Overridable Property PatientDiagnosis() As DbSet(Of PatientDiagnosi)
    Public Overridable Property PatientDisabilities() As DbSet(Of PatientDisability)
    Public Overridable Property PatientDocuments() As DbSet(Of PatientDocument)
    Public Overridable Property PatientGeneralHistories() As DbSet(Of PatientGeneralHistory)
    Public Overridable Property PatientGuarantors() As DbSet(Of PatientGuarantor)
    Public Overridable Property PatientHabits() As DbSet(Of PatientHabit)
    Public Overridable Property PatientImmunizations() As DbSet(Of PatientImmunization)
    Public Overridable Property PatientInpatientVisitDailyRecords() As DbSet(Of PatientInpatientVisitDailyRecord)
    Public Overridable Property PatientInpatientVisitRecordParameters() As DbSet(Of PatientInpatientVisitRecordParameter)
    Public Overridable Property PatientInsurances() As DbSet(Of PatientInsurance)
    Public Overridable Property PatientLogins() As DbSet(Of PatientLogin)
    Public Overridable Property PatientMedicalHistories() As DbSet(Of PatientMedicalHistory)
    Public Overridable Property PatientMedicalProcedures() As DbSet(Of PatientMedicalProcedure)
    Public Overridable Property PatientMedicalReferals() As DbSet(Of PatientMedicalReferal)
    Public Overridable Property PatientMedicalReferalRequests() As DbSet(Of PatientMedicalReferalRequest)
    Public Overridable Property PatientMedications() As DbSet(Of PatientMedication)
    Public Overridable Property PatientMedicationDetails() As DbSet(Of PatientMedicationDetail)
    Public Overridable Property PatientMessages() As DbSet(Of PatientMessage)
    Public Overridable Property PatientOccupationalHazzards() As DbSet(Of PatientOccupationalHazzard)
    Public Overridable Property PatientPhysiotherapies() As DbSet(Of PatientPhysiotherapy)
    Public Overridable Property PatientRecurringVisits() As DbSet(Of PatientRecurringVisit)
    Public Overridable Property PatientVisionCares() As DbSet(Of PatientVisionCare)
    Public Overridable Property PatientVisitPayments() As DbSet(Of PatientVisitPayment)
    Public Overridable Property PatientVitalSigns() As DbSet(Of PatientVitalSign)
    Public Overridable Property PaymentMethods() As DbSet(Of PaymentMethod)
    Public Overridable Property Physicians() As DbSet(Of Physician)
    Public Overridable Property PhysicianLogins() As DbSet(Of PhysicianLogin)
    Public Overridable Property PhysicianMessages() As DbSet(Of PhysicianMessage)
    Public Overridable Property PhysicianSpecialities() As DbSet(Of PhysicianSpeciality)
    Public Overridable Property PhysicianTypes() As DbSet(Of PhysicianType)
    Public Overridable Property PhysioTherapies() As DbSet(Of PhysioTherapy)
    Public Overridable Property PMRWorkFlows() As DbSet(Of PMRWorkFlow)
    Public Overridable Property PMRWorkFlowQueueManagers() As DbSet(Of PMRWorkFlowQueueManager)
    Public Overridable Property ProcedurePractitionerTypes() As DbSet(Of ProcedurePractitionerType)
    Public Overridable Property Races() As DbSet(Of Race)
    Public Overridable Property Relationships() As DbSet(Of Relationship)
    Public Overridable Property Religions() As DbSet(Of Religion)
    Public Overridable Property ReportTypes() As DbSet(Of ReportType)
    Public Overridable Property SpecimenSources() As DbSet(Of SpecimenSource)
    Public Overridable Property Staffs() As DbSet(Of Staff)
    Public Overridable Property StaffCategories() As DbSet(Of StaffCategory)
    Public Overridable Property States() As DbSet(Of State)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagram)
    Public Overridable Property UnitOfMeasures() As DbSet(Of UnitOfMeasure)
    Public Overridable Property VisionCares() As DbSet(Of VisionCare)
    Public Overridable Property VisitRecordParameters() As DbSet(Of VisitRecordParameter)
    Public Overridable Property VisitTypes() As DbSet(Of VisitType)
    Public Overridable Property YearCalendars() As DbSet(Of YearCalendar)
    Public Overridable Property PhysicianLoginHistories() As DbSet(Of PhysicianLoginHistory)
    Public Overridable Property vw_PatientAccident() As DbSet(Of vw_PatientAccident)
    Public Overridable Property vw_PatientAllergy() As DbSet(Of vw_PatientAllergy)
    Public Overridable Property vw_PatientAssociatedParty() As DbSet(Of vw_PatientAssociatedParty)
    Public Overridable Property vw_PatientDemographic() As DbSet(Of vw_PatientDemographic)
    Public Overridable Property vw_PatientDetail() As DbSet(Of vw_PatientDetail)
    Public Overridable Property vw_PatientDiagnosis() As DbSet(Of vw_PatientDiagnosis)
    Public Overridable Property vw_PatientDisability() As DbSet(Of vw_PatientDisability)
    Public Overridable Property vw_PatientGuarantor() As DbSet(Of vw_PatientGuarantor)
    Public Overridable Property vw_PatientImmunization() As DbSet(Of vw_PatientImmunization)
    Public Overridable Property vw_PatientInpatientVisit() As DbSet(Of vw_PatientInpatientVisit)
    Public Overridable Property vw_PatientInpatientVisitDailyRecord() As DbSet(Of vw_PatientInpatientVisitDailyRecord)
    Public Overridable Property vw_PatientInsurance() As DbSet(Of vw_PatientInsurance)
    Public Overridable Property vw_PatientMedicalHistory() As DbSet(Of vw_PatientMedicalHistory)
    Public Overridable Property vw_PatientMedicalProcedure() As DbSet(Of vw_PatientMedicalProcedure)
    Public Overridable Property vw_PatientMedicalReferal() As DbSet(Of vw_PatientMedicalReferal)
    Public Overridable Property vw_PatientMedication() As DbSet(Of vw_PatientMedication)
    Public Overridable Property vw_PatientPhysiotherapy() As DbSet(Of vw_PatientPhysiotherapy)
    Public Overridable Property vw_PatientRadiology() As DbSet(Of vw_PatientRadiology)
    Public Overridable Property vw_PatientVisit() As DbSet(Of vw_PatientVisit)
    Public Overridable Property vw_PatientVitalSign() As DbSet(Of vw_PatientVitalSign)
    Public Overridable Property vw_Physician() As DbSet(Of vw_Physician)
    Public Overridable Property vw_PhysicianMessage() As DbSet(Of vw_PhysicianMessage)
    Public Overridable Property vw_PhysicianSchedule() As DbSet(Of vw_PhysicianSchedule)
    Public Overridable Property vw_StaffList() As DbSet(Of vw_StaffList)
    Public Overridable Property vw_StaffSchedule() As DbSet(Of vw_StaffSchedule)
    Public Overridable Property vwPatientLaboratories() As DbSet(Of vwPatientLaboratory)
    Public Overridable Property vw_PatientInsuranceClaim() As DbSet(Of vw_PatientInsuranceClaim)

    Public Overridable Function usp_AddAllergy(allergyCd As String, allergyDesc As String) As Integer
        Dim allergyCdParameter As ObjectParameter = If(allergyCd IsNot Nothing, New ObjectParameter("AllergyCd", allergyCd), New ObjectParameter("AllergyCd", GetType(String)))

        Dim allergyDescParameter As ObjectParameter = If(allergyDesc IsNot Nothing, New ObjectParameter("AllergyDesc", allergyDesc), New ObjectParameter("AllergyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddAllergy", allergyCdParameter, allergyDescParameter)
    End Function

    Public Overridable Function usp_AddDentalProcedure(dentalProcCd As String, dentalProcDesc As String) As Integer
        Dim dentalProcCdParameter As ObjectParameter = If(dentalProcCd IsNot Nothing, New ObjectParameter("DentalProcCd", dentalProcCd), New ObjectParameter("DentalProcCd", GetType(String)))

        Dim dentalProcDescParameter As ObjectParameter = If(dentalProcDesc IsNot Nothing, New ObjectParameter("DentalProcDesc", dentalProcDesc), New ObjectParameter("DentalProcDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddDentalProcedure", dentalProcCdParameter, dentalProcDescParameter)
    End Function

    Public Overridable Function usp_AddDiagnosis(diagCd As String, diagDesc As String) As Integer
        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim diagDescParameter As ObjectParameter = If(diagDesc IsNot Nothing, New ObjectParameter("DiagDesc", diagDesc), New ObjectParameter("DiagDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddDiagnosis", diagCdParameter, diagDescParameter)
    End Function

    Public Overridable Function usp_AddDisability(disabilityCd As String, disabilityDesc As String) As Integer
        Dim disabilityCdParameter As ObjectParameter = If(disabilityCd IsNot Nothing, New ObjectParameter("DisabilityCd", disabilityCd), New ObjectParameter("DisabilityCd", GetType(String)))

        Dim disabilityDescParameter As ObjectParameter = If(disabilityDesc IsNot Nothing, New ObjectParameter("DisabilityDesc", disabilityDesc), New ObjectParameter("DisabilityDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddDisability", disabilityCdParameter, disabilityDescParameter)
    End Function

    Public Overridable Function usp_AddHabit(habitCd As String, habitDesc As String) As Integer
        Dim habitCdParameter As ObjectParameter = If(habitCd IsNot Nothing, New ObjectParameter("HabitCd", habitCd), New ObjectParameter("HabitCd", GetType(String)))

        Dim habitDescParameter As ObjectParameter = If(habitDesc IsNot Nothing, New ObjectParameter("HabitDesc", habitDesc), New ObjectParameter("HabitDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddHabit", habitCdParameter, habitDescParameter)
    End Function

    Public Overridable Function usp_AddHospital(hospitalID As String, hospitalName As String, hospitalSpecialityCd As String, handicapAccess As Nullable(Of Boolean), iCURoom As Nullable(Of Boolean), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim hospitalNameParameter As ObjectParameter = If(hospitalName IsNot Nothing, New ObjectParameter("HospitalName", hospitalName), New ObjectParameter("HospitalName", GetType(String)))

        Dim hospitalSpecialityCdParameter As ObjectParameter = If(hospitalSpecialityCd IsNot Nothing, New ObjectParameter("HospitalSpecialityCd", hospitalSpecialityCd), New ObjectParameter("HospitalSpecialityCd", GetType(String)))

        Dim handicapAccessParameter As ObjectParameter = If(handicapAccess.HasValue, New ObjectParameter("HandicapAccess", handicapAccess), New ObjectParameter("HandicapAccess", GetType(Boolean)))

        Dim iCURoomParameter As ObjectParameter = If(iCURoom.HasValue, New ObjectParameter("ICURoom", iCURoom), New ObjectParameter("ICURoom", GetType(Boolean)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddHospital", hospitalIDParameter, hospitalNameParameter, hospitalSpecialityCdParameter, handicapAccessParameter, iCURoomParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddHospitalLocation(hospitalID As String, locationCd As String, locationName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, contactNo As String, mainLocation As Nullable(Of Boolean), pinCode As String, faxNumber As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim locationNameParameter As ObjectParameter = If(locationName IsNot Nothing, New ObjectParameter("LocationName", locationName), New ObjectParameter("LocationName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim contactNoParameter As ObjectParameter = If(contactNo IsNot Nothing, New ObjectParameter("ContactNo", contactNo), New ObjectParameter("ContactNo", GetType(String)))

        Dim mainLocationParameter As ObjectParameter = If(mainLocation.HasValue, New ObjectParameter("MainLocation", mainLocation), New ObjectParameter("MainLocation", GetType(Boolean)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddHospitalLocation", hospitalIDParameter, locationCdParameter, locationNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, contactNoParameter, mainLocationParameter, pinCodeParameter, faxNumberParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddHospitalRoom(hospitalID As String, locationCd As String, roomCd As String, roomTypeCd As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim roomCdParameter As ObjectParameter = If(roomCd IsNot Nothing, New ObjectParameter("RoomCd", roomCd), New ObjectParameter("RoomCd", GetType(String)))

        Dim roomTypeCdParameter As ObjectParameter = If(roomTypeCd IsNot Nothing, New ObjectParameter("RoomTypeCd", roomTypeCd), New ObjectParameter("RoomTypeCd", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddHospitalRoom", hospitalIDParameter, locationCdParameter, roomCdParameter, roomTypeCdParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddHospitalRoomBed(hospitalRoomID As Nullable(Of Integer), bedNumber As Nullable(Of Integer), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Dim bedNumberParameter As ObjectParameter = If(bedNumber.HasValue, New ObjectParameter("BedNumber", bedNumber), New ObjectParameter("BedNumber", GetType(Integer)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddHospitalRoomBed", hospitalRoomIDParameter, bedNumberParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddImmunization(immunizationCd As String, immunizationDesc As String) As Integer
        Dim immunizationCdParameter As ObjectParameter = If(immunizationCd IsNot Nothing, New ObjectParameter("ImmunizationCd", immunizationCd), New ObjectParameter("ImmunizationCd", GetType(String)))

        Dim immunizationDescParameter As ObjectParameter = If(immunizationDesc IsNot Nothing, New ObjectParameter("ImmunizationDesc", immunizationDesc), New ObjectParameter("ImmunizationDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddImmunization", immunizationCdParameter, immunizationDescParameter)
    End Function

    Public Overridable Function usp_AddInsurance(companyName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, enteredByUserID As Nullable(Of Integer), insuranceCompanyID As ObjectParameter) As Integer
        Dim companyNameParameter As ObjectParameter = If(companyName IsNot Nothing, New ObjectParameter("CompanyName", companyName), New ObjectParameter("CompanyName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddInsurance", companyNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, enteredByUserIDParameter, insuranceCompanyID)
    End Function

    Public Overridable Function usp_AddLaboratory(laboratoryCd As String, laboratoryDesc As String) As Integer
        Dim laboratoryCdParameter As ObjectParameter = If(laboratoryCd IsNot Nothing, New ObjectParameter("LaboratoryCd", laboratoryCd), New ObjectParameter("LaboratoryCd", GetType(String)))

        Dim laboratoryDescParameter As ObjectParameter = If(laboratoryDesc IsNot Nothing, New ObjectParameter("LaboratoryDesc", laboratoryDesc), New ObjectParameter("LaboratoryDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddLaboratory", laboratoryCdParameter, laboratoryDescParameter)
    End Function

    Public Overridable Function usp_AddMedicalHistory(medicalHistoryCd As String, medicalHistoryDesc As String) As Integer
        Dim medicalHistoryCdParameter As ObjectParameter = If(medicalHistoryCd IsNot Nothing, New ObjectParameter("MedicalHistoryCd", medicalHistoryCd), New ObjectParameter("MedicalHistoryCd", GetType(String)))

        Dim medicalHistoryDescParameter As ObjectParameter = If(medicalHistoryDesc IsNot Nothing, New ObjectParameter("MedicalHistoryDesc", medicalHistoryDesc), New ObjectParameter("MedicalHistoryDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicalHistory", medicalHistoryCdParameter, medicalHistoryDescParameter)
    End Function

    Public Overridable Function usp_AddMedicalLab(labName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, enteredByUserID As Nullable(Of Integer), labID As ObjectParameter) As Integer
        Dim labNameParameter As ObjectParameter = If(labName IsNot Nothing, New ObjectParameter("LabName", labName), New ObjectParameter("LabName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicalLab", labNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, enteredByUserIDParameter, labID)
    End Function

    Public Overridable Function usp_AddMedicalProcedure(procedureCd As String, procedureDesc As String) As Integer
        Dim procedureCdParameter As ObjectParameter = If(procedureCd IsNot Nothing, New ObjectParameter("ProcedureCd", procedureCd), New ObjectParameter("ProcedureCd", GetType(String)))

        Dim procedureDescParameter As ObjectParameter = If(procedureDesc IsNot Nothing, New ObjectParameter("ProcedureDesc", procedureDesc), New ObjectParameter("ProcedureDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicalProcedure", procedureCdParameter, procedureDescParameter)
    End Function

    Public Overridable Function usp_AddMedication(medicationForDesc As String, enteredByUserID As Nullable(Of Integer), medicationID As ObjectParameter) As Integer
        Dim medicationForDescParameter As ObjectParameter = If(medicationForDesc IsNot Nothing, New ObjectParameter("MedicationForDesc", medicationForDesc), New ObjectParameter("MedicationForDesc", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedication", medicationForDescParameter, enteredByUserIDParameter, medicationID)
    End Function

    Public Overridable Function usp_AddMedicationCategory(medicationCatCd As String, medicationCatDesc As String) As Integer
        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Dim medicationCatDescParameter As ObjectParameter = If(medicationCatDesc IsNot Nothing, New ObjectParameter("MedicationCatDesc", medicationCatDesc), New ObjectParameter("MedicationCatDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicationCategory", medicationCatCdParameter, medicationCatDescParameter)
    End Function

    Public Overridable Function usp_AddMedicationDetail(medicationID As Nullable(Of Integer), medicationDesc As String, noOfTimesDay As Nullable(Of Integer), noOfDays As Nullable(Of Integer), dosage As String, enteredByUSerID As Nullable(Of Integer)) As Integer
        Dim medicationIDParameter As ObjectParameter = If(medicationID.HasValue, New ObjectParameter("MedicationID", medicationID), New ObjectParameter("MedicationID", GetType(Integer)))

        Dim medicationDescParameter As ObjectParameter = If(medicationDesc IsNot Nothing, New ObjectParameter("MedicationDesc", medicationDesc), New ObjectParameter("MedicationDesc", GetType(String)))

        Dim noOfTimesDayParameter As ObjectParameter = If(noOfTimesDay.HasValue, New ObjectParameter("NoOfTimesDay", noOfTimesDay), New ObjectParameter("NoOfTimesDay", GetType(Integer)))

        Dim noOfDaysParameter As ObjectParameter = If(noOfDays.HasValue, New ObjectParameter("NoOfDays", noOfDays), New ObjectParameter("NoOfDays", GetType(Integer)))

        Dim dosageParameter As ObjectParameter = If(dosage IsNot Nothing, New ObjectParameter("Dosage", dosage), New ObjectParameter("Dosage", GetType(String)))

        Dim enteredByUSerIDParameter As ObjectParameter = If(enteredByUSerID.HasValue, New ObjectParameter("EnteredByUSerID", enteredByUSerID), New ObjectParameter("EnteredByUSerID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicationDetail", medicationIDParameter, medicationDescParameter, noOfTimesDayParameter, noOfDaysParameter, dosageParameter, enteredByUSerIDParameter)
    End Function

    Public Overridable Function usp_AddMedicationSubCategory(medicationSubCatCd As String, medicationSubCatDesc As String, medicationCatCd As String) As Integer
        Dim medicationSubCatCdParameter As ObjectParameter = If(medicationSubCatCd IsNot Nothing, New ObjectParameter("MedicationSubCatCd", medicationSubCatCd), New ObjectParameter("MedicationSubCatCd", GetType(String)))

        Dim medicationSubCatDescParameter As ObjectParameter = If(medicationSubCatDesc IsNot Nothing, New ObjectParameter("MedicationSubCatDesc", medicationSubCatDesc), New ObjectParameter("MedicationSubCatDesc", GetType(String)))

        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddMedicationSubCategory", medicationSubCatCdParameter, medicationSubCatDescParameter, medicationCatCdParameter)
    End Function

    Public Overridable Function usp_AddOccupationalHazzard(occHazzardCd As String, occHazzardDesc As String) As Integer
        Dim occHazzardCdParameter As ObjectParameter = If(occHazzardCd IsNot Nothing, New ObjectParameter("OccHazzardCd", occHazzardCd), New ObjectParameter("OccHazzardCd", GetType(String)))

        Dim occHazzardDescParameter As ObjectParameter = If(occHazzardDesc IsNot Nothing, New ObjectParameter("OccHazzardDesc", occHazzardDesc), New ObjectParameter("OccHazzardDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddOccupationalHazzard", occHazzardCdParameter, occHazzardDescParameter)
    End Function

    Public Overridable Function usp_AddOtherHospital(hospitalName As String, hospitalSpecialityCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, businessPhone As String, faxNumber As String, enteredByUserID As Nullable(Of Integer), hospitalID As ObjectParameter) As Integer
        Dim hospitalNameParameter As ObjectParameter = If(hospitalName IsNot Nothing, New ObjectParameter("HospitalName", hospitalName), New ObjectParameter("HospitalName", GetType(String)))

        Dim hospitalSpecialityCdParameter As ObjectParameter = If(hospitalSpecialityCd IsNot Nothing, New ObjectParameter("HospitalSpecialityCd", hospitalSpecialityCd), New ObjectParameter("HospitalSpecialityCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddOtherHospital", hospitalNameParameter, hospitalSpecialityCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, businessPhoneParameter, faxNumberParameter, enteredByUserIDParameter, hospitalID)
    End Function

    Public Overridable Function usp_AddPatient(lastName As String, firstName As String, middleInitial As String, dOB As Nullable(Of Date), genderCd As String, religionCd As String, raceCd As String, maritialStatusCd As String, occupationCd As String, employer As String, passportNumber As String, enterByUserID As Nullable(Of Integer), patientID As ObjectParameter) As Integer
        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim middleInitialParameter As ObjectParameter = If(middleInitial IsNot Nothing, New ObjectParameter("MiddleInitial", middleInitial), New ObjectParameter("MiddleInitial", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB.HasValue, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(Date)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim religionCdParameter As ObjectParameter = If(religionCd IsNot Nothing, New ObjectParameter("ReligionCd", religionCd), New ObjectParameter("ReligionCd", GetType(String)))

        Dim raceCdParameter As ObjectParameter = If(raceCd IsNot Nothing, New ObjectParameter("RaceCd", raceCd), New ObjectParameter("RaceCd", GetType(String)))

        Dim maritialStatusCdParameter As ObjectParameter = If(maritialStatusCd IsNot Nothing, New ObjectParameter("MaritialStatusCd", maritialStatusCd), New ObjectParameter("MaritialStatusCd", GetType(String)))

        Dim occupationCdParameter As ObjectParameter = If(occupationCd IsNot Nothing, New ObjectParameter("OccupationCd", occupationCd), New ObjectParameter("OccupationCd", GetType(String)))

        Dim employerParameter As ObjectParameter = If(employer IsNot Nothing, New ObjectParameter("Employer", employer), New ObjectParameter("Employer", GetType(String)))

        Dim passportNumberParameter As ObjectParameter = If(passportNumber IsNot Nothing, New ObjectParameter("PassportNumber", passportNumber), New ObjectParameter("PassportNumber", GetType(String)))

        Dim enterByUserIDParameter As ObjectParameter = If(enterByUserID.HasValue, New ObjectParameter("EnterByUserID", enterByUserID), New ObjectParameter("EnterByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatient", lastNameParameter, firstNameParameter, middleInitialParameter, dOBParameter, genderCdParameter, religionCdParameter, raceCdParameter, maritialStatusCdParameter, occupationCdParameter, employerParameter, passportNumberParameter, enterByUserIDParameter, patientID)
    End Function

    Public Overridable Function usp_ADDPatientAccident(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), accidentDate As Nullable(Of Date), accidentTime As String, physicianID As Nullable(Of Integer), attendingStaffID As Nullable(Of Integer), deathInAccident As Nullable(Of Boolean), peopleInvolvedInAccident As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim accidentDateParameter As ObjectParameter = If(accidentDate.HasValue, New ObjectParameter("AccidentDate", accidentDate), New ObjectParameter("AccidentDate", GetType(Date)))

        Dim accidentTimeParameter As ObjectParameter = If(accidentTime IsNot Nothing, New ObjectParameter("AccidentTime", accidentTime), New ObjectParameter("AccidentTime", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim attendingStaffIDParameter As ObjectParameter = If(attendingStaffID.HasValue, New ObjectParameter("AttendingStaffID", attendingStaffID), New ObjectParameter("AttendingStaffID", GetType(Integer)))

        Dim deathInAccidentParameter As ObjectParameter = If(deathInAccident.HasValue, New ObjectParameter("DeathInAccident", deathInAccident), New ObjectParameter("DeathInAccident", GetType(Boolean)))

        Dim peopleInvolvedInAccidentParameter As ObjectParameter = If(peopleInvolvedInAccident.HasValue, New ObjectParameter("PeopleInvolvedInAccident", peopleInvolvedInAccident), New ObjectParameter("PeopleInvolvedInAccident", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientAccident", patientIDParameter, visitIDParameter, accidentDateParameter, accidentTimeParameter, physicianIDParameter, attendingStaffIDParameter, deathInAccidentParameter, peopleInvolvedInAccidentParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientAllergy(patientID As Nullable(Of Integer), allergyCd As String, allergyTypeCd As String, identificationDate As Nullable(Of Date), allergySeverityCd As String, allergyReaction As String, enterByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim allergyCdParameter As ObjectParameter = If(allergyCd IsNot Nothing, New ObjectParameter("AllergyCd", allergyCd), New ObjectParameter("AllergyCd", GetType(String)))

        Dim allergyTypeCdParameter As ObjectParameter = If(allergyTypeCd IsNot Nothing, New ObjectParameter("AllergyTypeCd", allergyTypeCd), New ObjectParameter("AllergyTypeCd", GetType(String)))

        Dim identificationDateParameter As ObjectParameter = If(identificationDate.HasValue, New ObjectParameter("IdentificationDate", identificationDate), New ObjectParameter("IdentificationDate", GetType(Date)))

        Dim allergySeverityCdParameter As ObjectParameter = If(allergySeverityCd IsNot Nothing, New ObjectParameter("AllergySeverityCd", allergySeverityCd), New ObjectParameter("AllergySeverityCd", GetType(String)))

        Dim allergyReactionParameter As ObjectParameter = If(allergyReaction IsNot Nothing, New ObjectParameter("AllergyReaction", allergyReaction), New ObjectParameter("AllergyReaction", GetType(String)))

        Dim enterByUserIDParameter As ObjectParameter = If(enterByUserID.HasValue, New ObjectParameter("EnterByUserID", enterByUserID), New ObjectParameter("EnterByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientAllergy", patientIDParameter, allergyCdParameter, allergyTypeCdParameter, identificationDateParameter, allergySeverityCdParameter, allergyReactionParameter, enterByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientAssociatedParty(patientID As Nullable(Of Integer), associatedPartyLastName As String, associatedPartyFirstName As String, relationshipCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim associatedPartyLastNameParameter As ObjectParameter = If(associatedPartyLastName IsNot Nothing, New ObjectParameter("AssociatedPartyLastName", associatedPartyLastName), New ObjectParameter("AssociatedPartyLastName", GetType(String)))

        Dim associatedPartyFirstNameParameter As ObjectParameter = If(associatedPartyFirstName IsNot Nothing, New ObjectParameter("AssociatedPartyFirstName", associatedPartyFirstName), New ObjectParameter("AssociatedPartyFirstName", GetType(String)))

        Dim relationshipCdParameter As ObjectParameter = If(relationshipCd IsNot Nothing, New ObjectParameter("RelationshipCd", relationshipCd), New ObjectParameter("RelationshipCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientAssociatedParty", patientIDParameter, associatedPartyLastNameParameter, associatedPartyFirstNameParameter, relationshipCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientDemographic(patientID As Nullable(Of Integer), addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, enterByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim enterByUserIDParameter As ObjectParameter = If(enterByUserID.HasValue, New ObjectParameter("EnterByUserID", enterByUserID), New ObjectParameter("EnterByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientDemographic", patientIDParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, enterByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientDentalProcedure(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), dentalProcCd As String, dentalProcDate As Nullable(Of Date), dentalClinicName As String, dentistName As String, physicianID As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim dentalProcCdParameter As ObjectParameter = If(dentalProcCd IsNot Nothing, New ObjectParameter("DentalProcCd", dentalProcCd), New ObjectParameter("DentalProcCd", GetType(String)))

        Dim dentalProcDateParameter As ObjectParameter = If(dentalProcDate.HasValue, New ObjectParameter("DentalProcDate", dentalProcDate), New ObjectParameter("DentalProcDate", GetType(Date)))

        Dim dentalClinicNameParameter As ObjectParameter = If(dentalClinicName IsNot Nothing, New ObjectParameter("DentalClinicName", dentalClinicName), New ObjectParameter("DentalClinicName", GetType(String)))

        Dim dentistNameParameter As ObjectParameter = If(dentistName IsNot Nothing, New ObjectParameter("DentistName", dentistName), New ObjectParameter("DentistName", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientDentalProcedure", patientIDParameter, visitIDParameter, dentalProcCdParameter, dentalProcDateParameter, dentalClinicNameParameter, dentistNameParameter, physicianIDParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientDiagnosis(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), diagCd As String, diagDate As Nullable(Of Date), diagCategoryCd As String, physicianID As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer), patDiagnosisID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim diagDateParameter As ObjectParameter = If(diagDate.HasValue, New ObjectParameter("DiagDate", diagDate), New ObjectParameter("DiagDate", GetType(Date)))

        Dim diagCategoryCdParameter As ObjectParameter = If(diagCategoryCd IsNot Nothing, New ObjectParameter("DiagCategoryCd", diagCategoryCd), New ObjectParameter("DiagCategoryCd", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientDiagnosis", patientIDParameter, visitIDParameter, diagCdParameter, diagDateParameter, diagCategoryCdParameter, physicianIDParameter, notesParameter, enteredByUserIDParameter, patDiagnosisID)
    End Function

    Public Overridable Function usp_ADDPatientDisability(patientID As Nullable(Of Integer), patDisabilityXML As String) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim patDisabilityXMLParameter As ObjectParameter = If(patDisabilityXML IsNot Nothing, New ObjectParameter("PatDisabilityXML", patDisabilityXML), New ObjectParameter("PatDisabilityXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientDisability", patientIDParameter, patDisabilityXMLParameter)
    End Function

    Public Overridable Function usp_ADDPatientDocument(patientID As Nullable(Of Integer), documentTypeCd As String, documentDesc As String, documentDate As Nullable(Of Date), documentImage As Byte(), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim documentTypeCdParameter As ObjectParameter = If(documentTypeCd IsNot Nothing, New ObjectParameter("DocumentTypeCd", documentTypeCd), New ObjectParameter("DocumentTypeCd", GetType(String)))

        Dim documentDescParameter As ObjectParameter = If(documentDesc IsNot Nothing, New ObjectParameter("DocumentDesc", documentDesc), New ObjectParameter("DocumentDesc", GetType(String)))

        Dim documentDateParameter As ObjectParameter = If(documentDate.HasValue, New ObjectParameter("DocumentDate", documentDate), New ObjectParameter("DocumentDate", GetType(Date)))

        Dim documentImageParameter As ObjectParameter = If(documentImage IsNot Nothing, New ObjectParameter("DocumentImage", documentImage), New ObjectParameter("DocumentImage", GetType(Byte())))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientDocument", patientIDParameter, documentTypeCdParameter, documentDescParameter, documentDateParameter, documentImageParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientGeneralHistory(patientID As Nullable(Of Integer), generalHistory As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim generalHistoryParameter As ObjectParameter = If(generalHistory IsNot Nothing, New ObjectParameter("GeneralHistory", generalHistory), New ObjectParameter("GeneralHistory", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientGeneralHistory", patientIDParameter, generalHistoryParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientGuarantor(patientID As Nullable(Of Integer), guarantorLastName As String, guarantorFirstName As String, relationshipCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim guarantorLastNameParameter As ObjectParameter = If(guarantorLastName IsNot Nothing, New ObjectParameter("GuarantorLastName", guarantorLastName), New ObjectParameter("GuarantorLastName", GetType(String)))

        Dim guarantorFirstNameParameter As ObjectParameter = If(guarantorFirstName IsNot Nothing, New ObjectParameter("GuarantorFirstName", guarantorFirstName), New ObjectParameter("GuarantorFirstName", GetType(String)))

        Dim relationshipCdParameter As ObjectParameter = If(relationshipCd IsNot Nothing, New ObjectParameter("RelationshipCd", relationshipCd), New ObjectParameter("RelationshipCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientGuarantor", patientIDParameter, guarantorLastNameParameter, guarantorFirstNameParameter, relationshipCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientHabit(patientID As Nullable(Of Integer), patHabitXML As String) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim patHabitXMLParameter As ObjectParameter = If(patHabitXML IsNot Nothing, New ObjectParameter("PatHabitXML", patHabitXML), New ObjectParameter("PatHabitXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientHabit", patientIDParameter, patHabitXMLParameter)
    End Function

    Public Overridable Function usp_ADDPatientImmunization(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), physicianID As Nullable(Of Integer), immunizationCd As String, immunizationDate As Nullable(Of Date), immunizationGivenByID As Nullable(Of Integer), immunizationNotes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim immunizationCdParameter As ObjectParameter = If(immunizationCd IsNot Nothing, New ObjectParameter("ImmunizationCd", immunizationCd), New ObjectParameter("ImmunizationCd", GetType(String)))

        Dim immunizationDateParameter As ObjectParameter = If(immunizationDate.HasValue, New ObjectParameter("ImmunizationDate", immunizationDate), New ObjectParameter("ImmunizationDate", GetType(Date)))

        Dim immunizationGivenByIDParameter As ObjectParameter = If(immunizationGivenByID.HasValue, New ObjectParameter("ImmunizationGivenByID", immunizationGivenByID), New ObjectParameter("ImmunizationGivenByID", GetType(Integer)))

        Dim immunizationNotesParameter As ObjectParameter = If(immunizationNotes IsNot Nothing, New ObjectParameter("ImmunizationNotes", immunizationNotes), New ObjectParameter("ImmunizationNotes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientImmunization", patientIDParameter, visitIDParameter, physicianIDParameter, immunizationCdParameter, immunizationDateParameter, immunizationGivenByIDParameter, immunizationNotesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientInpatientVisitDailyRecord(visitDailyRecordXML As String) As Integer
        Dim visitDailyRecordXMLParameter As ObjectParameter = If(visitDailyRecordXML IsNot Nothing, New ObjectParameter("VisitDailyRecordXML", visitDailyRecordXML), New ObjectParameter("VisitDailyRecordXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientInpatientVisitDailyRecord", visitDailyRecordXMLParameter)
    End Function

    Public Overridable Function usp_AddPatientInpatientVisitRecordParameter(visitID As Nullable(Of Integer), visitParamXML As String) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim visitParamXMLParameter As ObjectParameter = If(visitParamXML IsNot Nothing, New ObjectParameter("VisitParamXML", visitParamXML), New ObjectParameter("VisitParamXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientInpatientVisitRecordParameter", visitIDParameter, visitParamXMLParameter)
    End Function

    Public Overridable Function usp_ADDPatientInsurance(patientID As Nullable(Of Integer), insuranceCompanyID As Nullable(Of Integer), insuranceNumber As String, policyNumber As String, fromDate As Nullable(Of Date), coverageAmount As Nullable(Of Decimal), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim insuranceCompanyIDParameter As ObjectParameter = If(insuranceCompanyID.HasValue, New ObjectParameter("InsuranceCompanyID", insuranceCompanyID), New ObjectParameter("InsuranceCompanyID", GetType(Integer)))

        Dim insuranceNumberParameter As ObjectParameter = If(insuranceNumber IsNot Nothing, New ObjectParameter("InsuranceNumber", insuranceNumber), New ObjectParameter("InsuranceNumber", GetType(String)))

        Dim policyNumberParameter As ObjectParameter = If(policyNumber IsNot Nothing, New ObjectParameter("PolicyNumber", policyNumber), New ObjectParameter("PolicyNumber", GetType(String)))

        Dim fromDateParameter As ObjectParameter = If(fromDate.HasValue, New ObjectParameter("FromDate", fromDate), New ObjectParameter("FromDate", GetType(Date)))

        Dim coverageAmountParameter As ObjectParameter = If(coverageAmount.HasValue, New ObjectParameter("CoverageAmount", coverageAmount), New ObjectParameter("CoverageAmount", GetType(Decimal)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientInsurance", patientIDParameter, insuranceCompanyIDParameter, insuranceNumberParameter, policyNumberParameter, fromDateParameter, coverageAmountParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientLaboratoryRequest(patientID As Nullable(Of Integer), labTestCd As String, labTestDate As Nullable(Of Date), labTestEndDate As Nullable(Of Date), specimenSourceCd As String, diagnosticServiceSectionCd As String, physicianID As Nullable(Of Integer), visitID As Nullable(Of Integer), notes As String, labID As Nullable(Of Integer), enteredByUserID As Nullable(Of Integer), patLaboratoryID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim labTestCdParameter As ObjectParameter = If(labTestCd IsNot Nothing, New ObjectParameter("LabTestCd", labTestCd), New ObjectParameter("LabTestCd", GetType(String)))

        Dim labTestDateParameter As ObjectParameter = If(labTestDate.HasValue, New ObjectParameter("LabTestDate", labTestDate), New ObjectParameter("LabTestDate", GetType(Date)))

        Dim labTestEndDateParameter As ObjectParameter = If(labTestEndDate.HasValue, New ObjectParameter("LabTestEndDate", labTestEndDate), New ObjectParameter("LabTestEndDate", GetType(Date)))

        Dim specimenSourceCdParameter As ObjectParameter = If(specimenSourceCd IsNot Nothing, New ObjectParameter("SpecimenSourceCd", specimenSourceCd), New ObjectParameter("SpecimenSourceCd", GetType(String)))

        Dim diagnosticServiceSectionCdParameter As ObjectParameter = If(diagnosticServiceSectionCd IsNot Nothing, New ObjectParameter("DiagnosticServiceSectionCd", diagnosticServiceSectionCd), New ObjectParameter("DiagnosticServiceSectionCd", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim labIDParameter As ObjectParameter = If(labID.HasValue, New ObjectParameter("LabID", labID), New ObjectParameter("LabID", GetType(Integer)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientLaboratoryRequest", patientIDParameter, labTestCdParameter, labTestDateParameter, labTestEndDateParameter, specimenSourceCdParameter, diagnosticServiceSectionCdParameter, physicianIDParameter, visitIDParameter, notesParameter, labIDParameter, enteredByUserIDParameter, patLaboratoryID)
    End Function

    Public Overridable Function usp_AddPatientLaboratoryResult(patientID As Nullable(Of Integer), labTestCd As String, labTestDate As Nullable(Of Date), labTestEndDate As Nullable(Of Date), specimenSourceCd As String, diagnosticServiceSectionCd As String, resultDate As Nullable(Of Integer), abnormalFlagCd As String, labResult As String, dateEntered As Nullable(Of Date), enteredByUserID As Nullable(Of Integer), dateModified As Nullable(Of Date), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim labTestCdParameter As ObjectParameter = If(labTestCd IsNot Nothing, New ObjectParameter("LabTestCd", labTestCd), New ObjectParameter("LabTestCd", GetType(String)))

        Dim labTestDateParameter As ObjectParameter = If(labTestDate.HasValue, New ObjectParameter("LabTestDate", labTestDate), New ObjectParameter("LabTestDate", GetType(Date)))

        Dim labTestEndDateParameter As ObjectParameter = If(labTestEndDate.HasValue, New ObjectParameter("LabTestEndDate", labTestEndDate), New ObjectParameter("LabTestEndDate", GetType(Date)))

        Dim specimenSourceCdParameter As ObjectParameter = If(specimenSourceCd IsNot Nothing, New ObjectParameter("SpecimenSourceCd", specimenSourceCd), New ObjectParameter("SpecimenSourceCd", GetType(String)))

        Dim diagnosticServiceSectionCdParameter As ObjectParameter = If(diagnosticServiceSectionCd IsNot Nothing, New ObjectParameter("DiagnosticServiceSectionCd", diagnosticServiceSectionCd), New ObjectParameter("DiagnosticServiceSectionCd", GetType(String)))

        Dim resultDateParameter As ObjectParameter = If(resultDate.HasValue, New ObjectParameter("ResultDate", resultDate), New ObjectParameter("ResultDate", GetType(Integer)))

        Dim abnormalFlagCdParameter As ObjectParameter = If(abnormalFlagCd IsNot Nothing, New ObjectParameter("AbnormalFlagCd", abnormalFlagCd), New ObjectParameter("AbnormalFlagCd", GetType(String)))

        Dim labResultParameter As ObjectParameter = If(labResult IsNot Nothing, New ObjectParameter("LabResult", labResult), New ObjectParameter("LabResult", GetType(String)))

        Dim dateEnteredParameter As ObjectParameter = If(dateEntered.HasValue, New ObjectParameter("DateEntered", dateEntered), New ObjectParameter("DateEntered", GetType(Date)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Dim dateModifiedParameter As ObjectParameter = If(dateModified.HasValue, New ObjectParameter("DateModified", dateModified), New ObjectParameter("DateModified", GetType(Date)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientLaboratoryResult", patientIDParameter, labTestCdParameter, labTestDateParameter, labTestEndDateParameter, specimenSourceCdParameter, diagnosticServiceSectionCdParameter, resultDateParameter, abnormalFlagCdParameter, labResultParameter, dateEnteredParameter, enteredByUserIDParameter, dateModifiedParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientMedicalHistory(patientID As Nullable(Of Integer), familyHistory As Nullable(Of Boolean), mediHistoryXML As String) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim familyHistoryParameter As ObjectParameter = If(familyHistory.HasValue, New ObjectParameter("FamilyHistory", familyHistory), New ObjectParameter("FamilyHistory", GetType(Boolean)))

        Dim mediHistoryXMLParameter As ObjectParameter = If(mediHistoryXML IsNot Nothing, New ObjectParameter("MediHistoryXML", mediHistoryXML), New ObjectParameter("MediHistoryXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientMedicalHistory", patientIDParameter, familyHistoryParameter, mediHistoryXMLParameter)
    End Function

    Public Overridable Function usp_AddPatientMedicalProcedure(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), procedureCd As String, procedureDate As Nullable(Of Date), procedurePractitionerTypeCd As String, physicianID As Nullable(Of Integer), consultingPhysicianID As Nullable(Of Integer), procedureStaffID As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim procedureCdParameter As ObjectParameter = If(procedureCd IsNot Nothing, New ObjectParameter("ProcedureCd", procedureCd), New ObjectParameter("ProcedureCd", GetType(String)))

        Dim procedureDateParameter As ObjectParameter = If(procedureDate.HasValue, New ObjectParameter("ProcedureDate", procedureDate), New ObjectParameter("ProcedureDate", GetType(Date)))

        Dim procedurePractitionerTypeCdParameter As ObjectParameter = If(procedurePractitionerTypeCd IsNot Nothing, New ObjectParameter("ProcedurePractitionerTypeCd", procedurePractitionerTypeCd), New ObjectParameter("ProcedurePractitionerTypeCd", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim consultingPhysicianIDParameter As ObjectParameter = If(consultingPhysicianID.HasValue, New ObjectParameter("ConsultingPhysicianID", consultingPhysicianID), New ObjectParameter("ConsultingPhysicianID", GetType(Integer)))

        Dim procedureStaffIDParameter As ObjectParameter = If(procedureStaffID.HasValue, New ObjectParameter("ProcedureStaffID", procedureStaffID), New ObjectParameter("ProcedureStaffID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientMedicalProcedure", patientIDParameter, visitIDParameter, procedureCdParameter, procedureDateParameter, procedurePractitionerTypeCdParameter, physicianIDParameter, consultingPhysicianIDParameter, procedureStaffIDParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientMedicalReferal(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), physicianID As Nullable(Of Integer), referToPhysicianID As Nullable(Of Integer), referDate As Nullable(Of Date), diagCd As String, notes As String, enteredByUserID As Nullable(Of Integer), patMedicalReferalID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim referToPhysicianIDParameter As ObjectParameter = If(referToPhysicianID.HasValue, New ObjectParameter("ReferToPhysicianID", referToPhysicianID), New ObjectParameter("ReferToPhysicianID", GetType(Integer)))

        Dim referDateParameter As ObjectParameter = If(referDate.HasValue, New ObjectParameter("ReferDate", referDate), New ObjectParameter("ReferDate", GetType(Date)))

        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientMedicalReferal", patientIDParameter, visitIDParameter, physicianIDParameter, referToPhysicianIDParameter, referDateParameter, diagCdParameter, notesParameter, enteredByUserIDParameter, patMedicalReferalID)
    End Function

    Public Overridable Function usp_ADDPatientMedication(patientID As Nullable(Of Integer), medicationDate As String, physicianID As Nullable(Of Integer), specialNotes As String, enteredByUserID As Nullable(Of Integer), patMedicationID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim medicationDateParameter As ObjectParameter = If(medicationDate IsNot Nothing, New ObjectParameter("MedicationDate", medicationDate), New ObjectParameter("MedicationDate", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim specialNotesParameter As ObjectParameter = If(specialNotes IsNot Nothing, New ObjectParameter("SpecialNotes", specialNotes), New ObjectParameter("SpecialNotes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientMedication", patientIDParameter, medicationDateParameter, physicianIDParameter, specialNotesParameter, enteredByUserIDParameter, patMedicationID)
    End Function

    Public Overridable Function usp_ADDPatientMedicationDetail(patMedicationID As Nullable(Of Integer), medicationDesc As String, noOfTimesDay As Nullable(Of Integer), noOfDays As Nullable(Of Integer), dosage As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patMedicationIDParameter As ObjectParameter = If(patMedicationID.HasValue, New ObjectParameter("PatMedicationID", patMedicationID), New ObjectParameter("PatMedicationID", GetType(Integer)))

        Dim medicationDescParameter As ObjectParameter = If(medicationDesc IsNot Nothing, New ObjectParameter("MedicationDesc", medicationDesc), New ObjectParameter("MedicationDesc", GetType(String)))

        Dim noOfTimesDayParameter As ObjectParameter = If(noOfTimesDay.HasValue, New ObjectParameter("NoOfTimesDay", noOfTimesDay), New ObjectParameter("NoOfTimesDay", GetType(Integer)))

        Dim noOfDaysParameter As ObjectParameter = If(noOfDays.HasValue, New ObjectParameter("NoOfDays", noOfDays), New ObjectParameter("NoOfDays", GetType(Integer)))

        Dim dosageParameter As ObjectParameter = If(dosage IsNot Nothing, New ObjectParameter("Dosage", dosage), New ObjectParameter("Dosage", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientMedicationDetail", patMedicationIDParameter, medicationDescParameter, noOfTimesDayParameter, noOfDaysParameter, dosageParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientOccupationalHazzard(patientID As Nullable(Of Integer), patOccHazzardXML As String) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim patOccHazzardXMLParameter As ObjectParameter = If(patOccHazzardXML IsNot Nothing, New ObjectParameter("PatOccHazzardXML", patOccHazzardXML), New ObjectParameter("PatOccHazzardXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientOccupationalHazzard", patientIDParameter, patOccHazzardXMLParameter)
    End Function

    Public Overridable Function usp_AddPatientPastMedicalProcedure(patientId As Nullable(Of Integer), pastProcedureXML As String) As Integer
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim pastProcedureXMLParameter As ObjectParameter = If(pastProcedureXML IsNot Nothing, New ObjectParameter("PastProcedureXML", pastProcedureXML), New ObjectParameter("PastProcedureXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientPastMedicalProcedure", patientIdParameter, pastProcedureXMLParameter)
    End Function

    Public Overridable Function usp_AddPatientPastMedication(patientId As Nullable(Of Integer), pastMedicationXML As String) As Integer
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim pastMedicationXMLParameter As ObjectParameter = If(pastMedicationXML IsNot Nothing, New ObjectParameter("PastMedicationXML", pastMedicationXML), New ObjectParameter("PastMedicationXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientPastMedication", patientIdParameter, pastMedicationXMLParameter)
    End Function

    Public Overridable Function usp_ADDPatientPhoto(patientID As Nullable(Of Integer), photo As Byte(), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim photoParameter As ObjectParameter = If(photo IsNot Nothing, New ObjectParameter("Photo", photo), New ObjectParameter("Photo", GetType(Byte())))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientPhoto", patientIDParameter, photoParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientPhysiotherapy(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), physiotherapyReason As String, physiotherapyCd As String, physiotherapyDate As Nullable(Of Date), physicianID As Nullable(Of Integer), physiotherapistName As String, notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim physiotherapyReasonParameter As ObjectParameter = If(physiotherapyReason IsNot Nothing, New ObjectParameter("PhysiotherapyReason", physiotherapyReason), New ObjectParameter("PhysiotherapyReason", GetType(String)))

        Dim physiotherapyCdParameter As ObjectParameter = If(physiotherapyCd IsNot Nothing, New ObjectParameter("PhysiotherapyCd", physiotherapyCd), New ObjectParameter("PhysiotherapyCd", GetType(String)))

        Dim physiotherapyDateParameter As ObjectParameter = If(physiotherapyDate.HasValue, New ObjectParameter("PhysiotherapyDate", physiotherapyDate), New ObjectParameter("PhysiotherapyDate", GetType(Date)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim physiotherapistNameParameter As ObjectParameter = If(physiotherapistName IsNot Nothing, New ObjectParameter("PhysiotherapistName", physiotherapistName), New ObjectParameter("PhysiotherapistName", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientPhysiotherapy", patientIDParameter, visitIDParameter, physiotherapyReasonParameter, physiotherapyCdParameter, physiotherapyDateParameter, physicianIDParameter, physiotherapistNameParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientPreference(patientID As Nullable(Of Integer), physicianID As Nullable(Of Integer), pharmacyID As Nullable(Of Integer), medicalLabID As Nullable(Of Integer), radiologyLabID As Nullable(Of Integer), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim pharmacyIDParameter As ObjectParameter = If(pharmacyID.HasValue, New ObjectParameter("PharmacyID", pharmacyID), New ObjectParameter("PharmacyID", GetType(Integer)))

        Dim medicalLabIDParameter As ObjectParameter = If(medicalLabID.HasValue, New ObjectParameter("MedicalLabID", medicalLabID), New ObjectParameter("MedicalLabID", GetType(Integer)))

        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientPreference", patientIDParameter, physicianIDParameter, pharmacyIDParameter, medicalLabIDParameter, radiologyLabIDParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientRadiology(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), radiologyReason As String, radiologyCd As String, radiologyDate As Nullable(Of Date), physicianID As Nullable(Of Integer), notes As String, radiologyLabID As Nullable(Of Integer), enteredByUserID As Nullable(Of Integer), patRadiologyID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim radiologyReasonParameter As ObjectParameter = If(radiologyReason IsNot Nothing, New ObjectParameter("RadiologyReason", radiologyReason), New ObjectParameter("RadiologyReason", GetType(String)))

        Dim radiologyCdParameter As ObjectParameter = If(radiologyCd IsNot Nothing, New ObjectParameter("RadiologyCd", radiologyCd), New ObjectParameter("RadiologyCd", GetType(String)))

        Dim radiologyDateParameter As ObjectParameter = If(radiologyDate.HasValue, New ObjectParameter("RadiologyDate", radiologyDate), New ObjectParameter("RadiologyDate", GetType(Date)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientRadiology", patientIDParameter, visitIDParameter, radiologyReasonParameter, radiologyCdParameter, radiologyDateParameter, physicianIDParameter, notesParameter, radiologyLabIDParameter, enteredByUserIDParameter, patRadiologyID)
    End Function

    Public Overridable Function usp_AddPatientRecurringVisit(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), recurringVisitReason As String, recurringDate As Nullable(Of Date), physicianID As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim recurringVisitReasonParameter As ObjectParameter = If(recurringVisitReason IsNot Nothing, New ObjectParameter("RecurringVisitReason", recurringVisitReason), New ObjectParameter("RecurringVisitReason", GetType(String)))

        Dim recurringDateParameter As ObjectParameter = If(recurringDate.HasValue, New ObjectParameter("RecurringDate", recurringDate), New ObjectParameter("RecurringDate", GetType(Date)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientRecurringVisit", patientIDParameter, visitIDParameter, recurringVisitReasonParameter, recurringDateParameter, physicianIDParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPatientVisionCare(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), visionCareCd As String, visionCareDate As Nullable(Of Date), visionClinicName As String, visionCareProviderName As String, physicianID As Nullable(Of Integer), notes As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim visionCareCdParameter As ObjectParameter = If(visionCareCd IsNot Nothing, New ObjectParameter("VisionCareCd", visionCareCd), New ObjectParameter("VisionCareCd", GetType(String)))

        Dim visionCareDateParameter As ObjectParameter = If(visionCareDate.HasValue, New ObjectParameter("VisionCareDate", visionCareDate), New ObjectParameter("VisionCareDate", GetType(Date)))

        Dim visionClinicNameParameter As ObjectParameter = If(visionClinicName IsNot Nothing, New ObjectParameter("VisionClinicName", visionClinicName), New ObjectParameter("VisionClinicName", GetType(String)))

        Dim visionCareProviderNameParameter As ObjectParameter = If(visionCareProviderName IsNot Nothing, New ObjectParameter("VisionCareProviderName", visionCareProviderName), New ObjectParameter("VisionCareProviderName", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPatientVisionCare", patientIDParameter, visitIDParameter, visionCareCdParameter, visionCareDateParameter, visionClinicNameParameter, visionCareProviderNameParameter, physicianIDParameter, notesParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientVisit(patientID As Nullable(Of Integer), locationCd As String, visitStartDateTime As Nullable(Of Date), visitEndDateTime As Nullable(Of Date), visitType As String, physicianID As Nullable(Of Integer), referringPhysicianID As Nullable(Of Integer), consultingPhysicianID As Nullable(Of Integer), visitReasonCd As String, enteredByUserID As Nullable(Of Integer), visitID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim visitStartDateTimeParameter As ObjectParameter = If(visitStartDateTime.HasValue, New ObjectParameter("VisitStartDateTime", visitStartDateTime), New ObjectParameter("VisitStartDateTime", GetType(Date)))

        Dim visitEndDateTimeParameter As ObjectParameter = If(visitEndDateTime.HasValue, New ObjectParameter("VisitEndDateTime", visitEndDateTime), New ObjectParameter("VisitEndDateTime", GetType(Date)))

        Dim visitTypeParameter As ObjectParameter = If(visitType IsNot Nothing, New ObjectParameter("VisitType", visitType), New ObjectParameter("VisitType", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim referringPhysicianIDParameter As ObjectParameter = If(referringPhysicianID.HasValue, New ObjectParameter("ReferringPhysicianID", referringPhysicianID), New ObjectParameter("ReferringPhysicianID", GetType(Integer)))

        Dim consultingPhysicianIDParameter As ObjectParameter = If(consultingPhysicianID.HasValue, New ObjectParameter("ConsultingPhysicianID", consultingPhysicianID), New ObjectParameter("ConsultingPhysicianID", GetType(Integer)))

        Dim visitReasonCdParameter As ObjectParameter = If(visitReasonCd IsNot Nothing, New ObjectParameter("VisitReasonCd", visitReasonCd), New ObjectParameter("VisitReasonCd", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientVisit", patientIDParameter, locationCdParameter, visitStartDateTimeParameter, visitEndDateTimeParameter, visitTypeParameter, physicianIDParameter, referringPhysicianIDParameter, consultingPhysicianIDParameter, visitReasonCdParameter, enteredByUserIDParameter, visitID)
    End Function

    Public Overridable Function usp_ADDPatientVisitPayment(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), paymentMethodCd As String, totalPayment As Nullable(Of Decimal), enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim paymentMethodCdParameter As ObjectParameter = If(paymentMethodCd IsNot Nothing, New ObjectParameter("PaymentMethodCd", paymentMethodCd), New ObjectParameter("PaymentMethodCd", GetType(String)))

        Dim totalPaymentParameter As ObjectParameter = If(totalPayment.HasValue, New ObjectParameter("TotalPayment", totalPayment), New ObjectParameter("TotalPayment", GetType(Decimal)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientVisitPayment", patientIDParameter, visitIDParameter, paymentMethodCdParameter, totalPaymentParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_ADDPatientVitalSign(patientID As Nullable(Of Integer), visitID As Nullable(Of Integer), height As Nullable(Of Decimal), weight As Nullable(Of Decimal), temperature As Nullable(Of Decimal), pulse As Nullable(Of Decimal), bloodPressure As Nullable(Of Decimal), repositaryRate As Nullable(Of Decimal), painScale As Nullable(Of Integer), urinaryContinence As String, emotionalDistress As String, spirometry As String, glucose As Nullable(Of Integer), functionalStatus As String, oxygenSaturationLevel As Nullable(Of Decimal), vitalSignDate As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim heightParameter As ObjectParameter = If(height.HasValue, New ObjectParameter("Height", height), New ObjectParameter("Height", GetType(Decimal)))

        Dim weightParameter As ObjectParameter = If(weight.HasValue, New ObjectParameter("Weight", weight), New ObjectParameter("Weight", GetType(Decimal)))

        Dim temperatureParameter As ObjectParameter = If(temperature.HasValue, New ObjectParameter("Temperature", temperature), New ObjectParameter("Temperature", GetType(Decimal)))

        Dim pulseParameter As ObjectParameter = If(pulse.HasValue, New ObjectParameter("Pulse", pulse), New ObjectParameter("Pulse", GetType(Decimal)))

        Dim bloodPressureParameter As ObjectParameter = If(bloodPressure.HasValue, New ObjectParameter("BloodPressure", bloodPressure), New ObjectParameter("BloodPressure", GetType(Decimal)))

        Dim repositaryRateParameter As ObjectParameter = If(repositaryRate.HasValue, New ObjectParameter("RepositaryRate", repositaryRate), New ObjectParameter("RepositaryRate", GetType(Decimal)))

        Dim painScaleParameter As ObjectParameter = If(painScale.HasValue, New ObjectParameter("PainScale", painScale), New ObjectParameter("PainScale", GetType(Integer)))

        Dim urinaryContinenceParameter As ObjectParameter = If(urinaryContinence IsNot Nothing, New ObjectParameter("UrinaryContinence", urinaryContinence), New ObjectParameter("UrinaryContinence", GetType(String)))

        Dim emotionalDistressParameter As ObjectParameter = If(emotionalDistress IsNot Nothing, New ObjectParameter("EmotionalDistress", emotionalDistress), New ObjectParameter("EmotionalDistress", GetType(String)))

        Dim spirometryParameter As ObjectParameter = If(spirometry IsNot Nothing, New ObjectParameter("Spirometry", spirometry), New ObjectParameter("Spirometry", GetType(String)))

        Dim glucoseParameter As ObjectParameter = If(glucose.HasValue, New ObjectParameter("Glucose", glucose), New ObjectParameter("Glucose", GetType(Integer)))

        Dim functionalStatusParameter As ObjectParameter = If(functionalStatus IsNot Nothing, New ObjectParameter("FunctionalStatus", functionalStatus), New ObjectParameter("FunctionalStatus", GetType(String)))

        Dim oxygenSaturationLevelParameter As ObjectParameter = If(oxygenSaturationLevel.HasValue, New ObjectParameter("OxygenSaturationLevel", oxygenSaturationLevel), New ObjectParameter("OxygenSaturationLevel", GetType(Decimal)))

        Dim vitalSignDateParameter As ObjectParameter = If(vitalSignDate IsNot Nothing, New ObjectParameter("VitalSignDate", vitalSignDate), New ObjectParameter("VitalSignDate", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ADDPatientVitalSign", patientIDParameter, visitIDParameter, heightParameter, weightParameter, temperatureParameter, pulseParameter, bloodPressureParameter, repositaryRateParameter, painScaleParameter, urinaryContinenceParameter, emotionalDistressParameter, spirometryParameter, glucoseParameter, functionalStatusParameter, oxygenSaturationLevelParameter, vitalSignDateParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPharmacy(pharmacyName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, enteredByUserID As Nullable(Of Integer), pharmacyID As ObjectParameter) As Integer
        Dim pharmacyNameParameter As ObjectParameter = If(pharmacyName IsNot Nothing, New ObjectParameter("PharmacyName", pharmacyName), New ObjectParameter("PharmacyName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPharmacy", pharmacyNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, enteredByUserIDParameter, pharmacyID)
    End Function

    Public Overridable Function usp_AddPhysician(physicianLastName As String, physicianFirstName As String, middleInitial As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, countryCd As String, homePhone As String, businessPhone As String, emailAddress As String, faxNumber As String, providerSpecialityCd As String, physicianTypeCd As String, genderCd As String, enteredByUserID As Nullable(Of Integer), physicianID As ObjectParameter) As Integer
        Dim physicianLastNameParameter As ObjectParameter = If(physicianLastName IsNot Nothing, New ObjectParameter("PhysicianLastName", physicianLastName), New ObjectParameter("PhysicianLastName", GetType(String)))

        Dim physicianFirstNameParameter As ObjectParameter = If(physicianFirstName IsNot Nothing, New ObjectParameter("PhysicianFirstName", physicianFirstName), New ObjectParameter("PhysicianFirstName", GetType(String)))

        Dim middleInitialParameter As ObjectParameter = If(middleInitial IsNot Nothing, New ObjectParameter("MiddleInitial", middleInitial), New ObjectParameter("MiddleInitial", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryCdParameter As ObjectParameter = If(countryCd IsNot Nothing, New ObjectParameter("CountryCd", countryCd), New ObjectParameter("CountryCd", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim providerSpecialityCdParameter As ObjectParameter = If(providerSpecialityCd IsNot Nothing, New ObjectParameter("ProviderSpecialityCd", providerSpecialityCd), New ObjectParameter("ProviderSpecialityCd", GetType(String)))

        Dim physicianTypeCdParameter As ObjectParameter = If(physicianTypeCd IsNot Nothing, New ObjectParameter("PhysicianTypeCd", physicianTypeCd), New ObjectParameter("PhysicianTypeCd", GetType(String)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPhysician", physicianLastNameParameter, physicianFirstNameParameter, middleInitialParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryCdParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, faxNumberParameter, providerSpecialityCdParameter, physicianTypeCdParameter, genderCdParameter, enteredByUserIDParameter, physicianID)
    End Function

    Public Overridable Function usp_AddPhysicianSchedule(physicianID As Nullable(Of Integer), locationCd As String, scheduleYear As Nullable(Of Integer), weekNum As Nullable(Of Integer), day1FromTime As String, day1ToTime As String, day2FromTime As String, day2ToTime As String, day3FromTime As String, day3ToTime As String, day4FromTime As String, day4ToTime As String, day5FromTime As String, day5ToTime As String, day6FromTime As String, day6ToTime As String, day7FromTime As String, day7ToTime As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim scheduleYearParameter As ObjectParameter = If(scheduleYear.HasValue, New ObjectParameter("ScheduleYear", scheduleYear), New ObjectParameter("ScheduleYear", GetType(Integer)))

        Dim weekNumParameter As ObjectParameter = If(weekNum.HasValue, New ObjectParameter("WeekNum", weekNum), New ObjectParameter("WeekNum", GetType(Integer)))

        Dim day1FromTimeParameter As ObjectParameter = If(day1FromTime IsNot Nothing, New ObjectParameter("Day1FromTime", day1FromTime), New ObjectParameter("Day1FromTime", GetType(String)))

        Dim day1ToTimeParameter As ObjectParameter = If(day1ToTime IsNot Nothing, New ObjectParameter("Day1ToTime", day1ToTime), New ObjectParameter("Day1ToTime", GetType(String)))

        Dim day2FromTimeParameter As ObjectParameter = If(day2FromTime IsNot Nothing, New ObjectParameter("Day2FromTime", day2FromTime), New ObjectParameter("Day2FromTime", GetType(String)))

        Dim day2ToTimeParameter As ObjectParameter = If(day2ToTime IsNot Nothing, New ObjectParameter("Day2ToTime", day2ToTime), New ObjectParameter("Day2ToTime", GetType(String)))

        Dim day3FromTimeParameter As ObjectParameter = If(day3FromTime IsNot Nothing, New ObjectParameter("Day3FromTime", day3FromTime), New ObjectParameter("Day3FromTime", GetType(String)))

        Dim day3ToTimeParameter As ObjectParameter = If(day3ToTime IsNot Nothing, New ObjectParameter("Day3ToTime", day3ToTime), New ObjectParameter("Day3ToTime", GetType(String)))

        Dim day4FromTimeParameter As ObjectParameter = If(day4FromTime IsNot Nothing, New ObjectParameter("Day4FromTime", day4FromTime), New ObjectParameter("Day4FromTime", GetType(String)))

        Dim day4ToTimeParameter As ObjectParameter = If(day4ToTime IsNot Nothing, New ObjectParameter("Day4ToTime", day4ToTime), New ObjectParameter("Day4ToTime", GetType(String)))

        Dim day5FromTimeParameter As ObjectParameter = If(day5FromTime IsNot Nothing, New ObjectParameter("Day5FromTime", day5FromTime), New ObjectParameter("Day5FromTime", GetType(String)))

        Dim day5ToTimeParameter As ObjectParameter = If(day5ToTime IsNot Nothing, New ObjectParameter("Day5ToTime", day5ToTime), New ObjectParameter("Day5ToTime", GetType(String)))

        Dim day6FromTimeParameter As ObjectParameter = If(day6FromTime IsNot Nothing, New ObjectParameter("Day6FromTime", day6FromTime), New ObjectParameter("Day6FromTime", GetType(String)))

        Dim day6ToTimeParameter As ObjectParameter = If(day6ToTime IsNot Nothing, New ObjectParameter("Day6ToTime", day6ToTime), New ObjectParameter("Day6ToTime", GetType(String)))

        Dim day7FromTimeParameter As ObjectParameter = If(day7FromTime IsNot Nothing, New ObjectParameter("Day7FromTime", day7FromTime), New ObjectParameter("Day7FromTime", GetType(String)))

        Dim day7ToTimeParameter As ObjectParameter = If(day7ToTime IsNot Nothing, New ObjectParameter("Day7ToTime", day7ToTime), New ObjectParameter("Day7ToTime", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPhysicianSchedule", physicianIDParameter, locationCdParameter, scheduleYearParameter, weekNumParameter, day1FromTimeParameter, day1ToTimeParameter, day2FromTimeParameter, day2ToTimeParameter, day3FromTimeParameter, day3ToTimeParameter, day4FromTimeParameter, day4ToTimeParameter, day5FromTimeParameter, day5ToTimeParameter, day6FromTimeParameter, day6ToTimeParameter, day7FromTimeParameter, day7ToTimeParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddPhysiotherapy(physiotherapyCd As String, physiotherapyDesc As String) As Integer
        Dim physiotherapyCdParameter As ObjectParameter = If(physiotherapyCd IsNot Nothing, New ObjectParameter("PhysiotherapyCd", physiotherapyCd), New ObjectParameter("PhysiotherapyCd", GetType(String)))

        Dim physiotherapyDescParameter As ObjectParameter = If(physiotherapyDesc IsNot Nothing, New ObjectParameter("PhysiotherapyDesc", physiotherapyDesc), New ObjectParameter("PhysiotherapyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddPhysiotherapy", physiotherapyCdParameter, physiotherapyDescParameter)
    End Function

    Public Overridable Function usp_AddRadiology(radiologyCd As String, radiologyDesc As String) As Integer
        Dim radiologyCdParameter As ObjectParameter = If(radiologyCd IsNot Nothing, New ObjectParameter("RadiologyCd", radiologyCd), New ObjectParameter("RadiologyCd", GetType(String)))

        Dim radiologyDescParameter As ObjectParameter = If(radiologyDesc IsNot Nothing, New ObjectParameter("RadiologyDesc", radiologyDesc), New ObjectParameter("RadiologyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddRadiology", radiologyCdParameter, radiologyDescParameter)
    End Function

    Public Overridable Function usp_AddRadiologyLab(radiologyLabName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, enteredByUserID As Nullable(Of Integer), radiologyLabID As ObjectParameter) As Integer
        Dim radiologyLabNameParameter As ObjectParameter = If(radiologyLabName IsNot Nothing, New ObjectParameter("RadiologyLabName", radiologyLabName), New ObjectParameter("RadiologyLabName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddRadiologyLab", radiologyLabNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, enteredByUserIDParameter, radiologyLabID)
    End Function

    Public Overridable Function usp_AddStaff(lastName As String, firstName As String, dOB As String, joinDate As Nullable(Of Date), staffCatCd As String, title As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, otherPhone As String, emailAddress As String, genderCd As String, enteredByUserID As Nullable(Of Integer), staffID As ObjectParameter) As Integer
        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB IsNot Nothing, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(String)))

        Dim joinDateParameter As ObjectParameter = If(joinDate.HasValue, New ObjectParameter("JoinDate", joinDate), New ObjectParameter("JoinDate", GetType(Date)))

        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("Title", title), New ObjectParameter("Title", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim otherPhoneParameter As ObjectParameter = If(otherPhone IsNot Nothing, New ObjectParameter("OtherPhone", otherPhone), New ObjectParameter("OtherPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddStaff", lastNameParameter, firstNameParameter, dOBParameter, joinDateParameter, staffCatCdParameter, titleParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, otherPhoneParameter, emailAddressParameter, genderCdParameter, enteredByUserIDParameter, staffID)
    End Function

    Public Overridable Function usp_AddStaffCategory(staffCatCd As String, staffCatDesc As String) As Integer
        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Dim staffCatDescParameter As ObjectParameter = If(staffCatDesc IsNot Nothing, New ObjectParameter("StaffCatDesc", staffCatDesc), New ObjectParameter("StaffCatDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddStaffCategory", staffCatCdParameter, staffCatDescParameter)
    End Function

    Public Overridable Function usp_AddStaffSchedule(staffID As Nullable(Of Integer), locationCd As String, scheduleYear As Nullable(Of Integer), weekNum As Nullable(Of Integer), day1FromTime As String, day1ToTime As String, day2FromTime As String, day2ToTime As String, day3FromTime As String, day3ToTime As String, day4FromTime As String, day4ToTime As String, day5FromTime As String, day5ToTime As String, day6FromTime As String, day6ToTime As String, day7FromTime As String, day7ToTime As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim staffIDParameter As ObjectParameter = If(staffID.HasValue, New ObjectParameter("StaffID", staffID), New ObjectParameter("StaffID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim scheduleYearParameter As ObjectParameter = If(scheduleYear.HasValue, New ObjectParameter("ScheduleYear", scheduleYear), New ObjectParameter("ScheduleYear", GetType(Integer)))

        Dim weekNumParameter As ObjectParameter = If(weekNum.HasValue, New ObjectParameter("WeekNum", weekNum), New ObjectParameter("WeekNum", GetType(Integer)))

        Dim day1FromTimeParameter As ObjectParameter = If(day1FromTime IsNot Nothing, New ObjectParameter("Day1FromTime", day1FromTime), New ObjectParameter("Day1FromTime", GetType(String)))

        Dim day1ToTimeParameter As ObjectParameter = If(day1ToTime IsNot Nothing, New ObjectParameter("Day1ToTime", day1ToTime), New ObjectParameter("Day1ToTime", GetType(String)))

        Dim day2FromTimeParameter As ObjectParameter = If(day2FromTime IsNot Nothing, New ObjectParameter("Day2FromTime", day2FromTime), New ObjectParameter("Day2FromTime", GetType(String)))

        Dim day2ToTimeParameter As ObjectParameter = If(day2ToTime IsNot Nothing, New ObjectParameter("Day2ToTime", day2ToTime), New ObjectParameter("Day2ToTime", GetType(String)))

        Dim day3FromTimeParameter As ObjectParameter = If(day3FromTime IsNot Nothing, New ObjectParameter("Day3FromTime", day3FromTime), New ObjectParameter("Day3FromTime", GetType(String)))

        Dim day3ToTimeParameter As ObjectParameter = If(day3ToTime IsNot Nothing, New ObjectParameter("Day3ToTime", day3ToTime), New ObjectParameter("Day3ToTime", GetType(String)))

        Dim day4FromTimeParameter As ObjectParameter = If(day4FromTime IsNot Nothing, New ObjectParameter("Day4FromTime", day4FromTime), New ObjectParameter("Day4FromTime", GetType(String)))

        Dim day4ToTimeParameter As ObjectParameter = If(day4ToTime IsNot Nothing, New ObjectParameter("Day4ToTime", day4ToTime), New ObjectParameter("Day4ToTime", GetType(String)))

        Dim day5FromTimeParameter As ObjectParameter = If(day5FromTime IsNot Nothing, New ObjectParameter("Day5FromTime", day5FromTime), New ObjectParameter("Day5FromTime", GetType(String)))

        Dim day5ToTimeParameter As ObjectParameter = If(day5ToTime IsNot Nothing, New ObjectParameter("Day5ToTime", day5ToTime), New ObjectParameter("Day5ToTime", GetType(String)))

        Dim day6FromTimeParameter As ObjectParameter = If(day6FromTime IsNot Nothing, New ObjectParameter("Day6FromTime", day6FromTime), New ObjectParameter("Day6FromTime", GetType(String)))

        Dim day6ToTimeParameter As ObjectParameter = If(day6ToTime IsNot Nothing, New ObjectParameter("Day6ToTime", day6ToTime), New ObjectParameter("Day6ToTime", GetType(String)))

        Dim day7FromTimeParameter As ObjectParameter = If(day7FromTime IsNot Nothing, New ObjectParameter("Day7FromTime", day7FromTime), New ObjectParameter("Day7FromTime", GetType(String)))

        Dim day7ToTimeParameter As ObjectParameter = If(day7ToTime IsNot Nothing, New ObjectParameter("Day7ToTime", day7ToTime), New ObjectParameter("Day7ToTime", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddStaffSchedule", staffIDParameter, locationCdParameter, scheduleYearParameter, weekNumParameter, day1FromTimeParameter, day1ToTimeParameter, day2FromTimeParameter, day2ToTimeParameter, day3FromTimeParameter, day3ToTimeParameter, day4FromTimeParameter, day4ToTimeParameter, day5FromTimeParameter, day5ToTimeParameter, day6FromTimeParameter, day6ToTimeParameter, day7FromTimeParameter, day7ToTimeParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_AddVisionCare(visionCareCd As String, visionCareDesc As String) As Integer
        Dim visionCareCdParameter As ObjectParameter = If(visionCareCd IsNot Nothing, New ObjectParameter("VisionCareCd", visionCareCd), New ObjectParameter("VisionCareCd", GetType(String)))

        Dim visionCareDescParameter As ObjectParameter = If(visionCareDesc IsNot Nothing, New ObjectParameter("VisionCareDesc", visionCareDesc), New ObjectParameter("VisionCareDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddVisionCare", visionCareCdParameter, visionCareDescParameter)
    End Function

    Public Overridable Function usp_AddVisitRecordParameter(parameterCd As String, parameterDesc As String) As Integer
        Dim parameterCdParameter As ObjectParameter = If(parameterCd IsNot Nothing, New ObjectParameter("ParameterCd", parameterCd), New ObjectParameter("ParameterCd", GetType(String)))

        Dim parameterDescParameter As ObjectParameter = If(parameterDesc IsNot Nothing, New ObjectParameter("ParameterDesc", parameterDesc), New ObjectParameter("ParameterDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AddVisitRecordParameter", parameterCdParameter, parameterDescParameter)
    End Function

    Public Overridable Function usp_AdmitPatient(patientID As Nullable(Of Integer), locationCd As String, physicianID As Nullable(Of Integer), referringPhysicianID As Nullable(Of Integer), consultingPhysicianID As Nullable(Of Integer), admitDate As Nullable(Of Date), hospitalRoomID As Nullable(Of Integer), bedNumber As Nullable(Of Integer), admissionTypeCd As String, ambulatoryStatusCd As String, enteredByUserID As Nullable(Of Integer), visitID As ObjectParameter) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim referringPhysicianIDParameter As ObjectParameter = If(referringPhysicianID.HasValue, New ObjectParameter("ReferringPhysicianID", referringPhysicianID), New ObjectParameter("ReferringPhysicianID", GetType(Integer)))

        Dim consultingPhysicianIDParameter As ObjectParameter = If(consultingPhysicianID.HasValue, New ObjectParameter("ConsultingPhysicianID", consultingPhysicianID), New ObjectParameter("ConsultingPhysicianID", GetType(Integer)))

        Dim admitDateParameter As ObjectParameter = If(admitDate.HasValue, New ObjectParameter("AdmitDate", admitDate), New ObjectParameter("AdmitDate", GetType(Date)))

        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Dim bedNumberParameter As ObjectParameter = If(bedNumber.HasValue, New ObjectParameter("BedNumber", bedNumber), New ObjectParameter("BedNumber", GetType(Integer)))

        Dim admissionTypeCdParameter As ObjectParameter = If(admissionTypeCd IsNot Nothing, New ObjectParameter("AdmissionTypeCd", admissionTypeCd), New ObjectParameter("AdmissionTypeCd", GetType(String)))

        Dim ambulatoryStatusCdParameter As ObjectParameter = If(ambulatoryStatusCd IsNot Nothing, New ObjectParameter("AmbulatoryStatusCd", ambulatoryStatusCd), New ObjectParameter("AmbulatoryStatusCd", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AdmitPatient", patientIDParameter, locationCdParameter, physicianIDParameter, referringPhysicianIDParameter, consultingPhysicianIDParameter, admitDateParameter, hospitalRoomIDParameter, bedNumberParameter, admissionTypeCdParameter, ambulatoryStatusCdParameter, enteredByUserIDParameter, visitID)
    End Function

    Public Overridable Function usp_AuthenticateUser(userName As String, password As String, userType As String) As Integer
        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("Password", password), New ObjectParameter("Password", GetType(String)))

        Dim userTypeParameter As ObjectParameter = If(userType IsNot Nothing, New ObjectParameter("UserType", userType), New ObjectParameter("UserType", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_AuthenticateUser", userNameParameter, passwordParameter, userTypeParameter)
    End Function

    Public Overridable Function usp_AuthenticateUserPatient(userName As String, password As String) As ObjectResult(Of usp_AuthenticateUserPatient_Result)
        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("Password", password), New ObjectParameter("Password", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_AuthenticateUserPatient_Result)("usp_AuthenticateUserPatient", userNameParameter, passwordParameter)
    End Function

    Public Overridable Function usp_ChangePassword(userID As Nullable(Of Integer), userName As String, userType As String, password As String) As Integer
        Dim userIDParameter As ObjectParameter = If(userID.HasValue, New ObjectParameter("UserID", userID), New ObjectParameter("UserID", GetType(Integer)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim userTypeParameter As ObjectParameter = If(userType IsNot Nothing, New ObjectParameter("UserType", userType), New ObjectParameter("UserType", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("Password", password), New ObjectParameter("Password", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ChangePassword", userIDParameter, userNameParameter, userTypeParameter, passwordParameter)
    End Function

    Public Overridable Function usp_CheckAdmitedPatient(patientId As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("usp_CheckAdmitedPatient", patientIdParameter)
    End Function

    Public Overridable Function usp_CreatePhysicianLogin(physicianID As Nullable(Of Integer), userName As String, password As String, pwdSecQuestionID As Nullable(Of Integer), pwdSecAnswer As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("Password", password), New ObjectParameter("Password", GetType(String)))

        Dim pwdSecQuestionIDParameter As ObjectParameter = If(pwdSecQuestionID.HasValue, New ObjectParameter("PwdSecQuestionID", pwdSecQuestionID), New ObjectParameter("PwdSecQuestionID", GetType(Integer)))

        Dim pwdSecAnswerParameter As ObjectParameter = If(pwdSecAnswer IsNot Nothing, New ObjectParameter("PwdSecAnswer", pwdSecAnswer), New ObjectParameter("PwdSecAnswer", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_CreatePhysicianLogin", physicianIDParameter, userNameParameter, passwordParameter, pwdSecQuestionIDParameter, pwdSecAnswerParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_CreateStaffLogin(staffID As Nullable(Of Integer), userName As String, password As String, pwdSecQuestionID As Nullable(Of Integer), pwdSecAnswer As String, enteredByUserID As Nullable(Of Integer)) As Integer
        Dim staffIDParameter As ObjectParameter = If(staffID.HasValue, New ObjectParameter("StaffID", staffID), New ObjectParameter("StaffID", GetType(Integer)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim passwordParameter As ObjectParameter = If(password IsNot Nothing, New ObjectParameter("Password", password), New ObjectParameter("Password", GetType(String)))

        Dim pwdSecQuestionIDParameter As ObjectParameter = If(pwdSecQuestionID.HasValue, New ObjectParameter("PwdSecQuestionID", pwdSecQuestionID), New ObjectParameter("PwdSecQuestionID", GetType(Integer)))

        Dim pwdSecAnswerParameter As ObjectParameter = If(pwdSecAnswer IsNot Nothing, New ObjectParameter("PwdSecAnswer", pwdSecAnswer), New ObjectParameter("PwdSecAnswer", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_CreateStaffLogin", staffIDParameter, userNameParameter, passwordParameter, pwdSecQuestionIDParameter, pwdSecAnswerParameter, enteredByUserIDParameter)
    End Function

    Public Overridable Function usp_DeleteAllergy(allergyCd As String) As Integer
        Dim allergyCdParameter As ObjectParameter = If(allergyCd IsNot Nothing, New ObjectParameter("AllergyCd", allergyCd), New ObjectParameter("AllergyCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteAllergy", allergyCdParameter)
    End Function

    Public Overridable Function usp_DeleteDentalProcedure(dentalProcCd As String) As Integer
        Dim dentalProcCdParameter As ObjectParameter = If(dentalProcCd IsNot Nothing, New ObjectParameter("DentalProcCd", dentalProcCd), New ObjectParameter("DentalProcCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteDentalProcedure", dentalProcCdParameter)
    End Function

    Public Overridable Function usp_DeleteDiagnosis(diagCd As String) As Integer
        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteDiagnosis", diagCdParameter)
    End Function

    Public Overridable Function usp_DeleteDisability(disabilityCd As String) As Integer
        Dim disabilityCdParameter As ObjectParameter = If(disabilityCd IsNot Nothing, New ObjectParameter("DisabilityCd", disabilityCd), New ObjectParameter("DisabilityCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteDisability", disabilityCdParameter)
    End Function

    Public Overridable Function usp_DeleteHabit(habitCd As String) As Integer
        Dim habitCdParameter As ObjectParameter = If(habitCd IsNot Nothing, New ObjectParameter("HabitCd", habitCd), New ObjectParameter("HabitCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteHabit", habitCdParameter)
    End Function

    Public Overridable Function usp_DeleteHospitalRoom(hospitalRoomID As Nullable(Of Integer)) As Integer
        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteHospitalRoom", hospitalRoomIDParameter)
    End Function

    Public Overridable Function usp_DeleteHospitalRoomBed(hospitalRoomBedID As Nullable(Of Integer)) As Integer
        Dim hospitalRoomBedIDParameter As ObjectParameter = If(hospitalRoomBedID.HasValue, New ObjectParameter("HospitalRoomBedID", hospitalRoomBedID), New ObjectParameter("HospitalRoomBedID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteHospitalRoomBed", hospitalRoomBedIDParameter)
    End Function

    Public Overridable Function usp_DeleteImmunization(immunizationCd As String) As Integer
        Dim immunizationCdParameter As ObjectParameter = If(immunizationCd IsNot Nothing, New ObjectParameter("ImmunizationCd", immunizationCd), New ObjectParameter("ImmunizationCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteImmunization", immunizationCdParameter)
    End Function

    Public Overridable Function usp_DeleteInsurance(insuranceCompanyID As Nullable(Of Integer)) As Integer
        Dim insuranceCompanyIDParameter As ObjectParameter = If(insuranceCompanyID.HasValue, New ObjectParameter("InsuranceCompanyID", insuranceCompanyID), New ObjectParameter("InsuranceCompanyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteInsurance", insuranceCompanyIDParameter)
    End Function

    Public Overridable Function usp_DeleteLaboratory(laboratoryCd As String) As Integer
        Dim laboratoryCdParameter As ObjectParameter = If(laboratoryCd IsNot Nothing, New ObjectParameter("LaboratoryCd", laboratoryCd), New ObjectParameter("LaboratoryCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteLaboratory", laboratoryCdParameter)
    End Function

    Public Overridable Function usp_DeleteMedicalHistory(medicalHistoryCd As String) As Integer
        Dim medicalHistoryCdParameter As ObjectParameter = If(medicalHistoryCd IsNot Nothing, New ObjectParameter("MedicalHistoryCd", medicalHistoryCd), New ObjectParameter("MedicalHistoryCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteMedicalHistory", medicalHistoryCdParameter)
    End Function

    Public Overridable Function usp_DeleteMedicalLab(labID As Nullable(Of Integer)) As Integer
        Dim labIDParameter As ObjectParameter = If(labID.HasValue, New ObjectParameter("LabID", labID), New ObjectParameter("LabID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteMedicalLab", labIDParameter)
    End Function

    Public Overridable Function usp_DeleteMedication(medicationCd As String) As Integer
        Dim medicationCdParameter As ObjectParameter = If(medicationCd IsNot Nothing, New ObjectParameter("MedicationCd", medicationCd), New ObjectParameter("MedicationCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteMedication", medicationCdParameter)
    End Function

    Public Overridable Function usp_DeleteMedicationCategory(medicationCatCd As String) As Integer
        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteMedicationCategory", medicationCatCdParameter)
    End Function

    Public Overridable Function usp_DeleteMedicationSubCategory(medicationSubCatCd As String) As Integer
        Dim medicationSubCatCdParameter As ObjectParameter = If(medicationSubCatCd IsNot Nothing, New ObjectParameter("MedicationSubCatCd", medicationSubCatCd), New ObjectParameter("MedicationSubCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteMedicationSubCategory", medicationSubCatCdParameter)
    End Function

    Public Overridable Function usp_DeleteOccupationalHazzard(occHazzardCd As String) As Integer
        Dim occHazzardCdParameter As ObjectParameter = If(occHazzardCd IsNot Nothing, New ObjectParameter("OccHazzardCd", occHazzardCd), New ObjectParameter("OccHazzardCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteOccupationalHazzard", occHazzardCdParameter)
    End Function

    Public Overridable Function usp_DeleteOtherHospital(hospitalID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID.HasValue, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteOtherHospital", hospitalIDParameter)
    End Function

    Public Overridable Function usp_DeletePatient(patientID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatient", patientIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientAccident(patAccidentID As Nullable(Of Integer)) As Integer
        Dim patAccidentIDParameter As ObjectParameter = If(patAccidentID.HasValue, New ObjectParameter("PatAccidentID", patAccidentID), New ObjectParameter("PatAccidentID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientAccident", patAccidentIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientAllergy(patAllergyID As Nullable(Of Integer)) As Integer
        Dim patAllergyIDParameter As ObjectParameter = If(patAllergyID.HasValue, New ObjectParameter("PatAllergyID", patAllergyID), New ObjectParameter("PatAllergyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientAllergy", patAllergyIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientAssociatedParty(patientID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientAssociatedParty", patientIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientDentalProcedure(patDentalProcID As Nullable(Of Integer)) As Integer
        Dim patDentalProcIDParameter As ObjectParameter = If(patDentalProcID.HasValue, New ObjectParameter("PatDentalProcID", patDentalProcID), New ObjectParameter("PatDentalProcID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientDentalProcedure", patDentalProcIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientDiagnosis(patDiagnosisID As Nullable(Of Integer)) As Integer
        Dim patDiagnosisIDParameter As ObjectParameter = If(patDiagnosisID.HasValue, New ObjectParameter("PatDiagnosisID", patDiagnosisID), New ObjectParameter("PatDiagnosisID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientDiagnosis", patDiagnosisIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientDocument(patDocumentID As Nullable(Of Integer)) As Integer
        Dim patDocumentIDParameter As ObjectParameter = If(patDocumentID.HasValue, New ObjectParameter("PatDocumentID", patDocumentID), New ObjectParameter("PatDocumentID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientDocument", patDocumentIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientGuarantor(patientID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientGuarantor", patientIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientImmunization(patImmunizationID As Nullable(Of Integer)) As Integer
        Dim patImmunizationIDParameter As ObjectParameter = If(patImmunizationID.HasValue, New ObjectParameter("PatImmunizationID", patImmunizationID), New ObjectParameter("PatImmunizationID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientImmunization", patImmunizationIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientInsurance(patientID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientInsurance", patientIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientLaboratory(patLaboratoryID As Nullable(Of Integer)) As Integer
        Dim patLaboratoryIDParameter As ObjectParameter = If(patLaboratoryID.HasValue, New ObjectParameter("PatLaboratoryID", patLaboratoryID), New ObjectParameter("PatLaboratoryID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientLaboratory", patLaboratoryIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientMedicalProcedure(patProcedureID As Nullable(Of Integer)) As Integer
        Dim patProcedureIDParameter As ObjectParameter = If(patProcedureID.HasValue, New ObjectParameter("PatProcedureID", patProcedureID), New ObjectParameter("PatProcedureID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientMedicalProcedure", patProcedureIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientMedicalReferal(patMedicalReferalID As Nullable(Of Integer)) As Integer
        Dim patMedicalReferalIDParameter As ObjectParameter = If(patMedicalReferalID.HasValue, New ObjectParameter("PatMedicalReferalID", patMedicalReferalID), New ObjectParameter("PatMedicalReferalID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientMedicalReferal", patMedicalReferalIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientMedication(patMedicationID As Nullable(Of Integer)) As Integer
        Dim patMedicationIDParameter As ObjectParameter = If(patMedicationID.HasValue, New ObjectParameter("PatMedicationID", patMedicationID), New ObjectParameter("PatMedicationID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientMedication", patMedicationIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientPhysiotherapy(patPhysiotherapyID As Nullable(Of Integer)) As Integer
        Dim patPhysiotherapyIDParameter As ObjectParameter = If(patPhysiotherapyID.HasValue, New ObjectParameter("PatPhysiotherapyID", patPhysiotherapyID), New ObjectParameter("PatPhysiotherapyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientPhysiotherapy", patPhysiotherapyIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientPreferance(patientID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientPreferance", patientIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientRadiology(patRadiologyID As Nullable(Of Integer)) As Integer
        Dim patRadiologyIDParameter As ObjectParameter = If(patRadiologyID.HasValue, New ObjectParameter("PatRadiologyID", patRadiologyID), New ObjectParameter("PatRadiologyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientRadiology", patRadiologyIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientRecurringVisit(patRecurringVisitID As Nullable(Of Integer)) As Integer
        Dim patRecurringVisitIDParameter As ObjectParameter = If(patRecurringVisitID.HasValue, New ObjectParameter("PatRecurringVisitID", patRecurringVisitID), New ObjectParameter("PatRecurringVisitID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientRecurringVisit", patRecurringVisitIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientVisionCare(patVisionCareID As Nullable(Of Integer)) As Integer
        Dim patVisionCareIDParameter As ObjectParameter = If(patVisionCareID.HasValue, New ObjectParameter("PatVisionCareID", patVisionCareID), New ObjectParameter("PatVisionCareID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientVisionCare", patVisionCareIDParameter)
    End Function

    Public Overridable Function usp_DeletePatientVisit(visitID As Nullable(Of Integer)) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePatientVisit", visitIDParameter)
    End Function

    Public Overridable Function usp_DeletePharmacy(pharmacyID As Nullable(Of Integer)) As Integer
        Dim pharmacyIDParameter As ObjectParameter = If(pharmacyID.HasValue, New ObjectParameter("PharmacyID", pharmacyID), New ObjectParameter("PharmacyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePharmacy", pharmacyIDParameter)
    End Function

    Public Overridable Function usp_DeletePhysiotherapy(physiotherapyCd As String) As Integer
        Dim physiotherapyCdParameter As ObjectParameter = If(physiotherapyCd IsNot Nothing, New ObjectParameter("PhysiotherapyCd", physiotherapyCd), New ObjectParameter("PhysiotherapyCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeletePhysiotherapy", physiotherapyCdParameter)
    End Function

    Public Overridable Function usp_DeleteRadiology(radiologyCd As String) As Integer
        Dim radiologyCdParameter As ObjectParameter = If(radiologyCd IsNot Nothing, New ObjectParameter("RadiologyCd", radiologyCd), New ObjectParameter("RadiologyCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteRadiology", radiologyCdParameter)
    End Function

    Public Overridable Function usp_DeleteRadiologyLab(radiologyLabID As Nullable(Of Integer)) As Integer
        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteRadiologyLab", radiologyLabIDParameter)
    End Function

    Public Overridable Function usp_DeleteStaffCategory(staffCatCd As String) As Integer
        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteStaffCategory", staffCatCdParameter)
    End Function

    Public Overridable Function usp_DeleteVisionCare(visionCareCd As String) As Integer
        Dim visionCareCdParameter As ObjectParameter = If(visionCareCd IsNot Nothing, New ObjectParameter("VisionCareCd", visionCareCd), New ObjectParameter("VisionCareCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteVisionCare", visionCareCdParameter)
    End Function

    Public Overridable Function usp_DeleteVisitRecordParameter(parameterCd As String) As Integer
        Dim parameterCdParameter As ObjectParameter = If(parameterCd IsNot Nothing, New ObjectParameter("ParameterCd", parameterCd), New ObjectParameter("ParameterCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteVisitRecordParameter", parameterCdParameter)
    End Function

    Public Overridable Function usp_DischargePatient(visitID As Nullable(Of Integer), dischargeDate As Nullable(Of Date), deathInHospital As Nullable(Of Boolean), deathDate As Nullable(Of Date), dischargeNotes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim dischargeDateParameter As ObjectParameter = If(dischargeDate.HasValue, New ObjectParameter("DischargeDate", dischargeDate), New ObjectParameter("DischargeDate", GetType(Date)))

        Dim deathInHospitalParameter As ObjectParameter = If(deathInHospital.HasValue, New ObjectParameter("DeathInHospital", deathInHospital), New ObjectParameter("DeathInHospital", GetType(Boolean)))

        Dim deathDateParameter As ObjectParameter = If(deathDate.HasValue, New ObjectParameter("DeathDate", deathDate), New ObjectParameter("DeathDate", GetType(Date)))

        Dim dischargeNotesParameter As ObjectParameter = If(dischargeNotes IsNot Nothing, New ObjectParameter("DischargeNotes", dischargeNotes), New ObjectParameter("DischargeNotes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DischargePatient", visitIDParameter, dischargeDateParameter, deathInHospitalParameter, deathDateParameter, dischargeNotesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_GetAbnormalFlag() As ObjectResult(Of usp_GetAbnormalFlag_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAbnormalFlag_Result)("usp_GetAbnormalFlag")
    End Function

    Public Overridable Function usp_GetAdmissionType() As ObjectResult(Of usp_GetAdmissionType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAdmissionType_Result)("usp_GetAdmissionType")
    End Function

    Public Overridable Function usp_GetAllergyList() As ObjectResult(Of usp_GetAllergyList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAllergyList_Result)("usp_GetAllergyList")
    End Function

    Public Overridable Function usp_GetAllergySeverity() As ObjectResult(Of usp_GetAllergySeverity_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAllergySeverity_Result)("usp_GetAllergySeverity")
    End Function

    Public Overridable Function usp_GetAllergyType() As ObjectResult(Of usp_GetAllergyType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAllergyType_Result)("usp_GetAllergyType")
    End Function

    Public Overridable Function usp_GetAmbulatoryStatus() As ObjectResult(Of usp_GetAmbulatoryStatus_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetAmbulatoryStatus_Result)("usp_GetAmbulatoryStatus")
    End Function

    Public Overridable Function usp_GetCountry() As ObjectResult(Of usp_GetCountry_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetCountry_Result)("usp_GetCountry")
    End Function

    Public Overridable Function usp_GetDentalProcedure() As ObjectResult(Of usp_GetDentalProcedure_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDentalProcedure_Result)("usp_GetDentalProcedure")
    End Function

    Public Overridable Function usp_GetDiagnosis() As ObjectResult(Of usp_GetDiagnosis_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDiagnosis_Result)("usp_GetDiagnosis")
    End Function

    Public Overridable Function usp_GetDiagnosisCategory() As ObjectResult(Of usp_GetDiagnosisCategory_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDiagnosisCategory_Result)("usp_GetDiagnosisCategory")
    End Function

    Public Overridable Function usp_GetDiagnosticServiceSection() As ObjectResult(Of usp_GetDiagnosticServiceSection_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDiagnosticServiceSection_Result)("usp_GetDiagnosticServiceSection")
    End Function

    Public Overridable Function usp_GetDisability() As ObjectResult(Of usp_GetDisability_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDisability_Result)("usp_GetDisability")
    End Function

    Public Overridable Function usp_GetDocumentType() As ObjectResult(Of usp_GetDocumentType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetDocumentType_Result)("usp_GetDocumentType")
    End Function

    Public Overridable Function usp_GetEmailMessage(emailMessageTypeCd As String) As ObjectResult(Of usp_GetEmailMessage_Result)
        Dim emailMessageTypeCdParameter As ObjectParameter = If(emailMessageTypeCd IsNot Nothing, New ObjectParameter("EmailMessageTypeCd", emailMessageTypeCd), New ObjectParameter("EmailMessageTypeCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetEmailMessage_Result)("usp_GetEmailMessage", emailMessageTypeCdParameter)
    End Function

    Public Overridable Function usp_GetExternalPhysicianList() As ObjectResult(Of usp_GetExternalPhysicianList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetExternalPhysicianList_Result)("usp_GetExternalPhysicianList")
    End Function

    Public Overridable Function usp_GetGender() As ObjectResult(Of usp_GetGender_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetGender_Result)("usp_GetGender")
    End Function

    Public Overridable Function usp_GetHabit() As ObjectResult(Of usp_GetHabit_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHabit_Result)("usp_GetHabit")
    End Function

    Public Overridable Function usp_GetHospitalAvailableRoomBed(hospitalRoomID As Nullable(Of Integer)) As ObjectResult(Of usp_GetHospitalAvailableRoomBed_Result)
        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalAvailableRoomBed_Result)("usp_GetHospitalAvailableRoomBed", hospitalRoomIDParameter)
    End Function

    Public Overridable Function usp_GetHospitalDetail() As ObjectResult(Of usp_GetHospitalDetail_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalDetail_Result)("usp_GetHospitalDetail")
    End Function

    Public Overridable Function usp_GetHospitalLocation(hospitalID As String) As ObjectResult(Of usp_GetHospitalLocation_Result)
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalLocation_Result)("usp_GetHospitalLocation", hospitalIDParameter)
    End Function

    Public Overridable Function usp_GetHospitalLocationDetail(locationCd As String) As ObjectResult(Of usp_GetHospitalLocationDetail_Result)
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalLocationDetail_Result)("usp_GetHospitalLocationDetail", locationCdParameter)
    End Function

    Public Overridable Function usp_GetHospitalRoom(locationCd As String) As ObjectResult(Of usp_GetHospitalRoom_Result)
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalRoom_Result)("usp_GetHospitalRoom", locationCdParameter)
    End Function

    Public Overridable Function usp_GetHospitalRoomBed(locationCd As String, hospitalRoomID As Nullable(Of Integer)) As ObjectResult(Of usp_GetHospitalRoomBed_Result)
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalRoomBed_Result)("usp_GetHospitalRoomBed", locationCdParameter, hospitalRoomIDParameter)
    End Function

    Public Overridable Function usp_GetHospitalRoomBedByLocation(locationCd As String) As ObjectResult(Of usp_GetHospitalRoomBedByLocation_Result)
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalRoomBedByLocation_Result)("usp_GetHospitalRoomBedByLocation", locationCdParameter)
    End Function

    Public Overridable Function usp_GetHospitalRoomType() As ObjectResult(Of usp_GetHospitalRoomType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalRoomType_Result)("usp_GetHospitalRoomType")
    End Function

    Public Overridable Function usp_GetHospitalSpeciality() As ObjectResult(Of usp_GetHospitalSpeciality_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetHospitalSpeciality_Result)("usp_GetHospitalSpeciality")
    End Function

    Public Overridable Function usp_GetImmunization() As ObjectResult(Of usp_GetImmunization_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetImmunization_Result)("usp_GetImmunization")
    End Function

    Public Overridable Function usp_GetInPatientVisitByVisitID(visitId As Nullable(Of Integer)) As ObjectResult(Of usp_GetInPatientVisitByVisitID_Result)
        Dim visitIdParameter As ObjectParameter = If(visitId.HasValue, New ObjectParameter("VisitId", visitId), New ObjectParameter("VisitId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetInPatientVisitByVisitID_Result)("usp_GetInPatientVisitByVisitID", visitIdParameter)
    End Function

    Public Overridable Function usp_GetInpatientVisitList(locationCd As String, startDate As Nullable(Of Date), patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetInpatientVisitList_Result)
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim startDateParameter As ObjectParameter = If(startDate.HasValue, New ObjectParameter("StartDate", startDate), New ObjectParameter("StartDate", GetType(Date)))

        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetInpatientVisitList_Result)("usp_GetInpatientVisitList", locationCdParameter, startDateParameter, patientIDParameter)
    End Function

    Public Overridable Function usp_GetInsurance() As ObjectResult(Of usp_GetInsurance_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetInsurance_Result)("usp_GetInsurance")
    End Function

    Public Overridable Function usp_GetInsuranceDetail(insuranceCompanyID As Nullable(Of Integer)) As ObjectResult(Of usp_GetInsuranceDetail_Result)
        Dim insuranceCompanyIDParameter As ObjectParameter = If(insuranceCompanyID.HasValue, New ObjectParameter("InsuranceCompanyID", insuranceCompanyID), New ObjectParameter("InsuranceCompanyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetInsuranceDetail_Result)("usp_GetInsuranceDetail", insuranceCompanyIDParameter)
    End Function

    Public Overridable Function usp_GetInternalPhysicianList() As ObjectResult(Of usp_GetInternalPhysicianList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetInternalPhysicianList_Result)("usp_GetInternalPhysicianList")
    End Function

    Public Overridable Function usp_GetLaboratory() As ObjectResult(Of usp_GetLaboratory_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetLaboratory_Result)("usp_GetLaboratory")
    End Function

    Public Overridable Function usp_GetMaritialStatus() As ObjectResult(Of usp_GetMaritialStatus_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMaritialStatus_Result)("usp_GetMaritialStatus")
    End Function

    Public Overridable Function usp_GetMedicalHistory() As ObjectResult(Of usp_GetMedicalHistory_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedicalHistory_Result)("usp_GetMedicalHistory")
    End Function

    Public Overridable Function usp_GetMedicalLab() As ObjectResult(Of usp_GetMedicalLab_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedicalLab_Result)("usp_GetMedicalLab")
    End Function

    Public Overridable Function usp_GetMedicalLabDetail(labID As Nullable(Of Integer)) As ObjectResult(Of usp_GetMedicalLabDetail_Result)
        Dim labIDParameter As ObjectParameter = If(labID.HasValue, New ObjectParameter("LabID", labID), New ObjectParameter("LabID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedicalLabDetail_Result)("usp_GetMedicalLabDetail", labIDParameter)
    End Function

    Public Overridable Function usp_GetMedicalProcedure() As ObjectResult(Of usp_GetMedicalProcedure_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedicalProcedure_Result)("usp_GetMedicalProcedure")
    End Function

    Public Overridable Function usp_GetMedication() As ObjectResult(Of usp_GetMedication_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedication_Result)("usp_GetMedication")
    End Function

    Public Overridable Function usp_GetMedicationCategory() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetMedicationCategory")
    End Function

    Public Overridable Function usp_GetMedicationDetail(medicationID As Nullable(Of Integer)) As ObjectResult(Of usp_GetMedicationDetail_Result)
        Dim medicationIDParameter As ObjectParameter = If(medicationID.HasValue, New ObjectParameter("MedicationID", medicationID), New ObjectParameter("MedicationID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetMedicationDetail_Result)("usp_GetMedicationDetail", medicationIDParameter)
    End Function

    Public Overridable Function usp_GetMedicationSubCategory(medicationCatCd As String) As Integer
        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetMedicationSubCategory", medicationCatCdParameter)
    End Function

    Public Overridable Function usp_GetOccupation() As ObjectResult(Of usp_GetOccupation_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetOccupation_Result)("usp_GetOccupation")
    End Function

    Public Overridable Function usp_GetOccupationalHazzard() As ObjectResult(Of usp_GetOccupationalHazzard_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetOccupationalHazzard_Result)("usp_GetOccupationalHazzard")
    End Function

    Public Overridable Function usp_GetOtherHospitalDetail(hospitalID As Nullable(Of Integer)) As ObjectResult(Of usp_GetOtherHospitalDetail_Result)
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID.HasValue, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetOtherHospitalDetail_Result)("usp_GetOtherHospitalDetail", hospitalIDParameter)
    End Function

    Public Overridable Function usp_GetOutpatientVisitByVisitID(visitId As Nullable(Of Integer)) As ObjectResult(Of usp_GetOutpatientVisitByVisitID_Result)
        Dim visitIdParameter As ObjectParameter = If(visitId.HasValue, New ObjectParameter("VisitId", visitId), New ObjectParameter("VisitId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetOutpatientVisitByVisitID_Result)("usp_GetOutpatientVisitByVisitID", visitIdParameter)
    End Function

    Public Overridable Function usp_GetOutpatientVisitList(physicianID As Nullable(Of Integer), locationCd As String, startDate As String, endDate As String, visitDate As String) As Integer
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim startDateParameter As ObjectParameter = If(startDate IsNot Nothing, New ObjectParameter("StartDate", startDate), New ObjectParameter("StartDate", GetType(String)))

        Dim endDateParameter As ObjectParameter = If(endDate IsNot Nothing, New ObjectParameter("EndDate", endDate), New ObjectParameter("EndDate", GetType(String)))

        Dim visitDateParameter As ObjectParameter = If(visitDate IsNot Nothing, New ObjectParameter("VisitDate", visitDate), New ObjectParameter("VisitDate", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetOutpatientVisitList", physicianIDParameter, locationCdParameter, startDateParameter, endDateParameter, visitDateParameter)
    End Function

    Public Overridable Function usp_GetPasswordSecurityQuestion() As ObjectResult(Of usp_GetPasswordSecurityQuestion_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPasswordSecurityQuestion_Result)("usp_GetPasswordSecurityQuestion")
    End Function

    Public Overridable Function usp_GetPatientAccident(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientAccident_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientAccident_Result)("usp_GetPatientAccident", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientAllergy(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientAllergy_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientAllergy_Result)("usp_GetPatientAllergy", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientAssociatedParty(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientAssociatedParty_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientAssociatedParty_Result)("usp_GetPatientAssociatedParty", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientDemographic(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDemographic_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDemographic_Result)("usp_GetPatientDemographic", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientDentalProcByDentalProcID(patDentalProcID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDentalProcByDentalProcID_Result)
        Dim patDentalProcIDParameter As ObjectParameter = If(patDentalProcID.HasValue, New ObjectParameter("PatDentalProcID", patDentalProcID), New ObjectParameter("PatDentalProcID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDentalProcByDentalProcID_Result)("usp_GetPatientDentalProcByDentalProcID", patDentalProcIDParameter)
    End Function

    Public Overridable Function usp_GetPatientDentalProcedure(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDentalProcedure_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDentalProcedure_Result)("usp_GetPatientDentalProcedure", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientDetail(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDetail_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDetail_Result)("usp_GetPatientDetail", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientDiagnosis(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDiagnosis_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDiagnosis_Result)("usp_GetPatientDiagnosis", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientDiagnosisByDiagnosisID(patDiagnosisID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDiagnosisByDiagnosisID_Result)
        Dim patDiagnosisIDParameter As ObjectParameter = If(patDiagnosisID.HasValue, New ObjectParameter("PatDiagnosisID", patDiagnosisID), New ObjectParameter("PatDiagnosisID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDiagnosisByDiagnosisID_Result)("usp_GetPatientDiagnosisByDiagnosisID", patDiagnosisIDParameter)
    End Function

    Public Overridable Function usp_GetPatientDisability(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDisability_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDisability_Result)("usp_GetPatientDisability", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientDocument(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDocument_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDocument_Result)("usp_GetPatientDocument", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientDocumentByDocumentID(patDocumentID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientDocumentByDocumentID_Result)
        Dim patDocumentIDParameter As ObjectParameter = If(patDocumentID.HasValue, New ObjectParameter("PatDocumentID", patDocumentID), New ObjectParameter("PatDocumentID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientDocumentByDocumentID_Result)("usp_GetPatientDocumentByDocumentID", patDocumentIDParameter)
    End Function

    Public Overridable Function usp_GetPatientGeneralHistory(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientGeneralHistory_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientGeneralHistory_Result)("usp_GetPatientGeneralHistory", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientGuarantor(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientGuarantor_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientGuarantor_Result)("usp_GetPatientGuarantor", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientHabit(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientHabit_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientHabit_Result)("usp_GetPatientHabit", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientImmunization(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientImmunization_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientImmunization_Result)("usp_GetPatientImmunization", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientImmunizationByImmunizationID(patImmunizationID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientImmunizationByImmunizationID_Result)
        Dim patImmunizationIDParameter As ObjectParameter = If(patImmunizationID.HasValue, New ObjectParameter("PatImmunizationID", patImmunizationID), New ObjectParameter("PatImmunizationID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientImmunizationByImmunizationID_Result)("usp_GetPatientImmunizationByImmunizationID", patImmunizationIDParameter)
    End Function

    Public Overridable Function usp_GetPatientInpatientVisitDailyRecord(visitId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientInpatientVisitDailyRecord_Result)
        Dim visitIdParameter As ObjectParameter = If(visitId.HasValue, New ObjectParameter("VisitId", visitId), New ObjectParameter("VisitId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientInpatientVisitDailyRecord_Result)("usp_GetPatientInpatientVisitDailyRecord", visitIdParameter)
    End Function

    Public Overridable Function usp_GetPatientInpatientVisitMaxDailyRecordDay(visitId As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim visitIdParameter As ObjectParameter = If(visitId.HasValue, New ObjectParameter("VisitId", visitId), New ObjectParameter("VisitId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("usp_GetPatientInpatientVisitMaxDailyRecordDay", visitIdParameter)
    End Function

    Public Overridable Function usp_GetPatientInpatientVisitRecordParameter(visitId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientInpatientVisitRecordParameter_Result)
        Dim visitIdParameter As ObjectParameter = If(visitId.HasValue, New ObjectParameter("VisitId", visitId), New ObjectParameter("VisitId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientInpatientVisitRecordParameter_Result)("usp_GetPatientInpatientVisitRecordParameter", visitIdParameter)
    End Function

    Public Overridable Function usp_GetPatientInsurance(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientInsurance_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientInsurance_Result)("usp_GetPatientInsurance", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientLaboratory(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientLaboratory_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientLaboratory_Result)("usp_GetPatientLaboratory", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientLaboratoryByLaboratoryID(patLaboratoryID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientLaboratoryByLaboratoryID_Result)
        Dim patLaboratoryIDParameter As ObjectParameter = If(patLaboratoryID.HasValue, New ObjectParameter("PatLaboratoryID", patLaboratoryID), New ObjectParameter("PatLaboratoryID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientLaboratoryByLaboratoryID_Result)("usp_GetPatientLaboratoryByLaboratoryID", patLaboratoryIDParameter)
    End Function

    Public Overridable Function usp_GetPatientList() As ObjectResult(Of usp_GetPatientList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientList_Result)("usp_GetPatientList")
    End Function

    Public Overridable Function usp_GetPatientMedicalHistory(patientId As Nullable(Of Integer), familyHistory As Nullable(Of Boolean)) As ObjectResult(Of usp_GetPatientMedicalHistory_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim familyHistoryParameter As ObjectParameter = If(familyHistory.HasValue, New ObjectParameter("FamilyHistory", familyHistory), New ObjectParameter("FamilyHistory", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicalHistory_Result)("usp_GetPatientMedicalHistory", patientIdParameter, familyHistoryParameter)
    End Function

    Public Overridable Function usp_GetPatientMedicalProcedure(patientId As Nullable(Of Integer), pastProcedure As Nullable(Of Boolean)) As ObjectResult(Of usp_GetPatientMedicalProcedure_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim pastProcedureParameter As ObjectParameter = If(pastProcedure.HasValue, New ObjectParameter("PastProcedure", pastProcedure), New ObjectParameter("PastProcedure", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicalProcedure_Result)("usp_GetPatientMedicalProcedure", patientIdParameter, pastProcedureParameter)
    End Function

    Public Overridable Function usp_GetPatientMedicalReferal(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedicalReferal_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicalReferal_Result)("usp_GetPatientMedicalReferal", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientMedicalReferalByReferalID(patMedicalReferalID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedicalReferalByReferalID_Result)
        Dim patMedicalReferalIDParameter As ObjectParameter = If(patMedicalReferalID.HasValue, New ObjectParameter("PatMedicalReferalID", patMedicalReferalID), New ObjectParameter("PatMedicalReferalID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicalReferalByReferalID_Result)("usp_GetPatientMedicalReferalByReferalID", patMedicalReferalIDParameter)
    End Function

    Public Overridable Function usp_GetPatientMedication(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedication_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedication_Result)("usp_GetPatientMedication", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientMedicationByMedicationID(patMedicationID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedicationByMedicationID_Result)
        Dim patMedicationIDParameter As ObjectParameter = If(patMedicationID.HasValue, New ObjectParameter("PatMedicationID", patMedicationID), New ObjectParameter("PatMedicationID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicationByMedicationID_Result)("usp_GetPatientMedicationByMedicationID", patMedicationIDParameter)
    End Function

    Public Overridable Function usp_GetPatientMedicationDetail(patMedicationId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedicationDetail_Result)
        Dim patMedicationIdParameter As ObjectParameter = If(patMedicationId.HasValue, New ObjectParameter("PatMedicationId", patMedicationId), New ObjectParameter("PatMedicationId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedicationDetail_Result)("usp_GetPatientMedicationDetail", patMedicationIdParameter)
    End Function

    Public Overridable Function usp_GetPatientMedProcedureByProcedureID(patProcedureID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMedProcedureByProcedureID_Result)
        Dim patProcedureIDParameter As ObjectParameter = If(patProcedureID.HasValue, New ObjectParameter("PatProcedureID", patProcedureID), New ObjectParameter("PatProcedureID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMedProcedureByProcedureID_Result)("usp_GetPatientMedProcedureByProcedureID", patProcedureIDParameter)
    End Function

    Public Overridable Function usp_GetPatientMessage(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientMessage_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientMessage_Result)("usp_GetPatientMessage", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientOccupationalHazzard(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientOccupationalHazzard_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientOccupationalHazzard_Result)("usp_GetPatientOccupationalHazzard", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientOutpatientVisit(patientId As Nullable(Of Integer), visitDate As String) As ObjectResult(Of usp_GetPatientOutpatientVisit_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim visitDateParameter As ObjectParameter = If(visitDate IsNot Nothing, New ObjectParameter("VisitDate", visitDate), New ObjectParameter("VisitDate", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientOutpatientVisit_Result)("usp_GetPatientOutpatientVisit", patientIdParameter, visitDateParameter)
    End Function

    Public Overridable Function usp_GetPatientPhysiotheraphyByPhysiotherapyID(patPhysiotherapyID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientPhysiotheraphyByPhysiotherapyID_Result)
        Dim patPhysiotherapyIDParameter As ObjectParameter = If(patPhysiotherapyID.HasValue, New ObjectParameter("PatPhysiotherapyID", patPhysiotherapyID), New ObjectParameter("PatPhysiotherapyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientPhysiotheraphyByPhysiotherapyID_Result)("usp_GetPatientPhysiotheraphyByPhysiotherapyID", patPhysiotherapyIDParameter)
    End Function

    Public Overridable Function usp_GetPatientPhysiotherapy(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientPhysiotherapy_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientPhysiotherapy_Result)("usp_GetPatientPhysiotherapy", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientPreference(patientID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientPreference_Result)
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientPreference_Result)("usp_GetPatientPreference", patientIDParameter)
    End Function

    Public Overridable Function usp_GetPatientRadiology(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientRadiology_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientRadiology_Result)("usp_GetPatientRadiology", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientRadiologyByRadiologyID(patRadiologyID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientRadiologyByRadiologyID_Result)
        Dim patRadiologyIDParameter As ObjectParameter = If(patRadiologyID.HasValue, New ObjectParameter("PatRadiologyID", patRadiologyID), New ObjectParameter("PatRadiologyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientRadiologyByRadiologyID_Result)("usp_GetPatientRadiologyByRadiologyID", patRadiologyIDParameter)
    End Function

    Public Overridable Function usp_GetPatientRecurringVisit(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientRecurringVisit_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientRecurringVisit_Result)("usp_GetPatientRecurringVisit", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientRecurringVisitByRecurringVisitID(patRecurringVisitID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientRecurringVisitByRecurringVisitID_Result)
        Dim patRecurringVisitIDParameter As ObjectParameter = If(patRecurringVisitID.HasValue, New ObjectParameter("PatRecurringVisitID", patRecurringVisitID), New ObjectParameter("PatRecurringVisitID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientRecurringVisitByRecurringVisitID_Result)("usp_GetPatientRecurringVisitByRecurringVisitID", patRecurringVisitIDParameter)
    End Function

    Public Overridable Function usp_GetPatientVisionCare(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientVisionCare_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientVisionCare_Result)("usp_GetPatientVisionCare", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientVisionCareByVisionCareID(patVisionCareID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientVisionCareByVisionCareID_Result)
        Dim patVisionCareIDParameter As ObjectParameter = If(patVisionCareID.HasValue, New ObjectParameter("PatVisionCareID", patVisionCareID), New ObjectParameter("PatVisionCareID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientVisionCareByVisionCareID_Result)("usp_GetPatientVisionCareByVisionCareID", patVisionCareIDParameter)
    End Function

    Public Overridable Function usp_GetPatientVisitPayment(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientVisitPayment_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientVisitPayment_Result)("usp_GetPatientVisitPayment", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientVitalSign(patientId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientVitalSign_Result)
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientVitalSign_Result)("usp_GetPatientVitalSign", patientIdParameter)
    End Function

    Public Overridable Function usp_GetPatientVitalSignByVisitID(visitID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPatientVitalSignByVisitID_Result)
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPatientVitalSignByVisitID_Result)("usp_GetPatientVitalSignByVisitID", visitIDParameter)
    End Function

    Public Overridable Function usp_GetPaymentMethod() As ObjectResult(Of usp_GetPaymentMethod_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPaymentMethod_Result)("usp_GetPaymentMethod")
    End Function

    Public Overridable Function usp_GetPharmacy() As ObjectResult(Of usp_GetPharmacy_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPharmacy_Result)("usp_GetPharmacy")
    End Function

    Public Overridable Function usp_GetPharmacyDetail(pharmacyID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPharmacyDetail_Result)
        Dim pharmacyIDParameter As ObjectParameter = If(pharmacyID.HasValue, New ObjectParameter("PharmacyID", pharmacyID), New ObjectParameter("PharmacyID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPharmacyDetail_Result)("usp_GetPharmacyDetail", pharmacyIDParameter)
    End Function

    Public Overridable Function usp_GetPhysician(physicianId As Nullable(Of Integer)) As ObjectResult(Of usp_GetPhysician_Result)
        Dim physicianIdParameter As ObjectParameter = If(physicianId.HasValue, New ObjectParameter("PhysicianId", physicianId), New ObjectParameter("PhysicianId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysician_Result)("usp_GetPhysician", physicianIdParameter)
    End Function

    Public Overridable Function usp_GetPhysicianList() As ObjectResult(Of usp_GetPhysicianList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysicianList_Result)("usp_GetPhysicianList")
    End Function

    Public Overridable Function usp_GetPhysicianMessage(physicianID As Nullable(Of Integer)) As ObjectResult(Of usp_GetPhysicianMessage_Result)
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysicianMessage_Result)("usp_GetPhysicianMessage", physicianIDParameter)
    End Function

    Public Overridable Function usp_GetPhysicianSchedule(physicianId As Nullable(Of Integer), locationCd As String, scheduleYear As String, fromWeekNum As String, toWeekNum As String) As Integer
        Dim physicianIdParameter As ObjectParameter = If(physicianId.HasValue, New ObjectParameter("PhysicianId", physicianId), New ObjectParameter("PhysicianId", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim scheduleYearParameter As ObjectParameter = If(scheduleYear IsNot Nothing, New ObjectParameter("ScheduleYear", scheduleYear), New ObjectParameter("ScheduleYear", GetType(String)))

        Dim fromWeekNumParameter As ObjectParameter = If(fromWeekNum IsNot Nothing, New ObjectParameter("FromWeekNum", fromWeekNum), New ObjectParameter("FromWeekNum", GetType(String)))

        Dim toWeekNumParameter As ObjectParameter = If(toWeekNum IsNot Nothing, New ObjectParameter("ToWeekNum", toWeekNum), New ObjectParameter("ToWeekNum", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetPhysicianSchedule", physicianIdParameter, locationCdParameter, scheduleYearParameter, fromWeekNumParameter, toWeekNumParameter)
    End Function

    Public Overridable Function usp_GetPhysicianSpeciality() As ObjectResult(Of usp_GetPhysicianSpeciality_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysicianSpeciality_Result)("usp_GetPhysicianSpeciality")
    End Function

    Public Overridable Function usp_GetPhysicianType() As ObjectResult(Of usp_GetPhysicianType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysicianType_Result)("usp_GetPhysicianType")
    End Function

    Public Overridable Function usp_GetPhysicianVisit(physicianID As Nullable(Of Integer), locationCd As String, startDate As Nullable(Of Date)) As ObjectResult(Of usp_GetPhysicianVisit_Result)
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim startDateParameter As ObjectParameter = If(startDate.HasValue, New ObjectParameter("StartDate", startDate), New ObjectParameter("StartDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysicianVisit_Result)("usp_GetPhysicianVisit", physicianIDParameter, locationCdParameter, startDateParameter)
    End Function

    Public Overridable Function usp_GetPhysiotherapy() As ObjectResult(Of usp_GetPhysiotherapy_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPhysiotherapy_Result)("usp_GetPhysiotherapy")
    End Function

    Public Overridable Function usp_GetPMRReports(reportTypeCd As String) As ObjectResult(Of usp_GetPMRReports_Result)
        Dim reportTypeCdParameter As ObjectParameter = If(reportTypeCd IsNot Nothing, New ObjectParameter("ReportTypeCd", reportTypeCd), New ObjectParameter("ReportTypeCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetPMRReports_Result)("usp_GetPMRReports", reportTypeCdParameter)
    End Function

    Public Overridable Function usp_GetProcedure() As ObjectResult(Of usp_GetProcedure_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetProcedure_Result)("usp_GetProcedure")
    End Function

    Public Overridable Function usp_GetProcedurePractitionerType() As ObjectResult(Of usp_GetProcedurePractitionerType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetProcedurePractitionerType_Result)("usp_GetProcedurePractitionerType")
    End Function

    Public Overridable Function usp_GetRace() As ObjectResult(Of usp_GetRace_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetRace_Result)("usp_GetRace")
    End Function

    Public Overridable Function usp_GetRadiology() As ObjectResult(Of usp_GetRadiology_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetRadiology_Result)("usp_GetRadiology")
    End Function

    Public Overridable Function usp_GetRadiologyLabDetail(radiologyLabID As Nullable(Of Integer)) As ObjectResult(Of usp_GetRadiologyLabDetail_Result)
        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetRadiologyLabDetail_Result)("usp_GetRadiologyLabDetail", radiologyLabIDParameter)
    End Function

    Public Overridable Function usp_GetRadiologyLabList() As ObjectResult(Of usp_GetRadiologyLabList_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetRadiologyLabList_Result)("usp_GetRadiologyLabList")
    End Function

    Public Overridable Function usp_GetRelationship() As ObjectResult(Of usp_GetRelationship_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetRelationship_Result)("usp_GetRelationship")
    End Function

    Public Overridable Function usp_GetReligion() As ObjectResult(Of usp_GetReligion_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetReligion_Result)("usp_GetReligion")
    End Function

    Public Overridable Function usp_GetSpecimenSource() As ObjectResult(Of usp_GetSpecimenSource_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetSpecimenSource_Result)("usp_GetSpecimenSource")
    End Function

    Public Overridable Function usp_GetStaffCategory() As ObjectResult(Of usp_GetStaffCategory_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetStaffCategory_Result)("usp_GetStaffCategory")
    End Function

    Public Overridable Function usp_GetStaffDetail(staffId As Nullable(Of Integer)) As Integer
        Dim staffIdParameter As ObjectParameter = If(staffId.HasValue, New ObjectParameter("StaffId", staffId), New ObjectParameter("StaffId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetStaffDetail", staffIdParameter)
    End Function

    Public Overridable Function usp_GetStaffList() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetStaffList")
    End Function

    Public Overridable Function usp_GetStaffSchedule(staffId As Nullable(Of Integer), locationCd As String, scheduleYear As String, fromWeek As String, toWeek As String) As Integer
        Dim staffIdParameter As ObjectParameter = If(staffId.HasValue, New ObjectParameter("StaffId", staffId), New ObjectParameter("StaffId", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim scheduleYearParameter As ObjectParameter = If(scheduleYear IsNot Nothing, New ObjectParameter("ScheduleYear", scheduleYear), New ObjectParameter("ScheduleYear", GetType(String)))

        Dim fromWeekParameter As ObjectParameter = If(fromWeek IsNot Nothing, New ObjectParameter("FromWeek", fromWeek), New ObjectParameter("FromWeek", GetType(String)))

        Dim toWeekParameter As ObjectParameter = If(toWeek IsNot Nothing, New ObjectParameter("ToWeek", toWeek), New ObjectParameter("ToWeek", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_GetStaffSchedule", staffIdParameter, locationCdParameter, scheduleYearParameter, fromWeekParameter, toWeekParameter)
    End Function

    Public Overridable Function usp_GetState() As ObjectResult(Of usp_GetState_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetState_Result)("usp_GetState")
    End Function

    Public Overridable Function usp_GetUnitOfMeasure() As ObjectResult(Of usp_GetUnitOfMeasure_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetUnitOfMeasure_Result)("usp_GetUnitOfMeasure")
    End Function

    Public Overridable Function usp_GetVisionCare() As ObjectResult(Of usp_GetVisionCare_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetVisionCare_Result)("usp_GetVisionCare")
    End Function

    Public Overridable Function usp_GetVisitReason() As ObjectResult(Of usp_GetVisitReason_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetVisitReason_Result)("usp_GetVisitReason")
    End Function

    Public Overridable Function usp_GetVisitRecordParameter() As ObjectResult(Of usp_GetVisitRecordParameter_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetVisitRecordParameter_Result)("usp_GetVisitRecordParameter")
    End Function

    Public Overridable Function usp_GetVisitType() As ObjectResult(Of usp_GetVisitType_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetVisitType_Result)("usp_GetVisitType")
    End Function

    Public Overridable Function usp_GetYearCalendar(year As Nullable(Of Integer)) As ObjectResult(Of usp_GetYearCalendar_Result)
        Dim yearParameter As ObjectParameter = If(year.HasValue, New ObjectParameter("Year", year), New ObjectParameter("Year", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_GetYearCalendar_Result)("usp_GetYearCalendar", yearParameter)
    End Function

    Public Overridable Function usp_RecoverPassword(userName As String, userType As String, pwdSecQuestionID As Nullable(Of Integer), pwdSecAnswer As String) As Integer
        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim userTypeParameter As ObjectParameter = If(userType IsNot Nothing, New ObjectParameter("UserType", userType), New ObjectParameter("UserType", GetType(String)))

        Dim pwdSecQuestionIDParameter As ObjectParameter = If(pwdSecQuestionID.HasValue, New ObjectParameter("PwdSecQuestionID", pwdSecQuestionID), New ObjectParameter("PwdSecQuestionID", GetType(Integer)))

        Dim pwdSecAnswerParameter As ObjectParameter = If(pwdSecAnswer IsNot Nothing, New ObjectParameter("PwdSecAnswer", pwdSecAnswer), New ObjectParameter("PwdSecAnswer", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_RecoverPassword", userNameParameter, userTypeParameter, pwdSecQuestionIDParameter, pwdSecAnswerParameter)
    End Function

    Public Overridable Function usp_ReschedulePatientVisit(visitID As Nullable(Of Integer), visitStartDateTime As Nullable(Of Date), visitEndDateTime As Nullable(Of Date), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim visitStartDateTimeParameter As ObjectParameter = If(visitStartDateTime.HasValue, New ObjectParameter("VisitStartDateTime", visitStartDateTime), New ObjectParameter("VisitStartDateTime", GetType(Date)))

        Dim visitEndDateTimeParameter As ObjectParameter = If(visitEndDateTime.HasValue, New ObjectParameter("VisitEndDateTime", visitEndDateTime), New ObjectParameter("VisitEndDateTime", GetType(Date)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ReschedulePatientVisit", visitIDParameter, visitStartDateTimeParameter, visitEndDateTimeParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_SearchOtherHospital(hospitalID As Nullable(Of Integer), hospitalName As String, city As String, state As String, hospitalSpecialityCd As String) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID.HasValue, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(Integer)))

        Dim hospitalNameParameter As ObjectParameter = If(hospitalName IsNot Nothing, New ObjectParameter("HospitalName", hospitalName), New ObjectParameter("HospitalName", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim hospitalSpecialityCdParameter As ObjectParameter = If(hospitalSpecialityCd IsNot Nothing, New ObjectParameter("HospitalSpecialityCd", hospitalSpecialityCd), New ObjectParameter("HospitalSpecialityCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SearchOtherHospital", hospitalIDParameter, hospitalNameParameter, cityParameter, stateParameter, hospitalSpecialityCdParameter)
    End Function

    Public Overridable Function usp_SearchPatient(patientId As Nullable(Of Integer), lastName As String, firstName As String, dOB As String) As Integer
        Dim patientIdParameter As ObjectParameter = If(patientId.HasValue, New ObjectParameter("PatientId", patientId), New ObjectParameter("PatientId", GetType(Integer)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB IsNot Nothing, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SearchPatient", patientIdParameter, lastNameParameter, firstNameParameter, dOBParameter)
    End Function

    Public Overridable Function usp_SearchPhysician(physicianId As Nullable(Of Integer), physicianLastName As String, physicianFirstName As String, physicianTypeCd As String, physicianSpecialityCd As String) As Integer
        Dim physicianIdParameter As ObjectParameter = If(physicianId.HasValue, New ObjectParameter("PhysicianId", physicianId), New ObjectParameter("PhysicianId", GetType(Integer)))

        Dim physicianLastNameParameter As ObjectParameter = If(physicianLastName IsNot Nothing, New ObjectParameter("PhysicianLastName", physicianLastName), New ObjectParameter("PhysicianLastName", GetType(String)))

        Dim physicianFirstNameParameter As ObjectParameter = If(physicianFirstName IsNot Nothing, New ObjectParameter("PhysicianFirstName", physicianFirstName), New ObjectParameter("PhysicianFirstName", GetType(String)))

        Dim physicianTypeCdParameter As ObjectParameter = If(physicianTypeCd IsNot Nothing, New ObjectParameter("PhysicianTypeCd", physicianTypeCd), New ObjectParameter("PhysicianTypeCd", GetType(String)))

        Dim physicianSpecialityCdParameter As ObjectParameter = If(physicianSpecialityCd IsNot Nothing, New ObjectParameter("PhysicianSpecialityCd", physicianSpecialityCd), New ObjectParameter("PhysicianSpecialityCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SearchPhysician", physicianIdParameter, physicianLastNameParameter, physicianFirstNameParameter, physicianTypeCdParameter, physicianSpecialityCdParameter)
    End Function

    Public Overridable Function usp_SearchStaff(staffID As Nullable(Of Integer), lastName As String, firstName As String, staffCatCd As String) As Integer
        Dim staffIDParameter As ObjectParameter = If(staffID.HasValue, New ObjectParameter("StaffID", staffID), New ObjectParameter("StaffID", GetType(Integer)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SearchStaff", staffIDParameter, lastNameParameter, firstNameParameter, staffCatCdParameter)
    End Function

    Public Overridable Function usp_SendMessageToPatient(msgFromPhysicianID As Nullable(Of Integer), msgForPatientID As Nullable(Of Integer), msgDate As Nullable(Of Date), msgSubject As String, msgBody As String, enteredByUserID As Nullable(Of Integer), patMsgID As ObjectParameter) As Integer
        Dim msgFromPhysicianIDParameter As ObjectParameter = If(msgFromPhysicianID.HasValue, New ObjectParameter("MsgFromPhysicianID", msgFromPhysicianID), New ObjectParameter("MsgFromPhysicianID", GetType(Integer)))

        Dim msgForPatientIDParameter As ObjectParameter = If(msgForPatientID.HasValue, New ObjectParameter("MsgForPatientID", msgForPatientID), New ObjectParameter("MsgForPatientID", GetType(Integer)))

        Dim msgDateParameter As ObjectParameter = If(msgDate.HasValue, New ObjectParameter("MsgDate", msgDate), New ObjectParameter("MsgDate", GetType(Date)))

        Dim msgSubjectParameter As ObjectParameter = If(msgSubject IsNot Nothing, New ObjectParameter("MsgSubject", msgSubject), New ObjectParameter("MsgSubject", GetType(String)))

        Dim msgBodyParameter As ObjectParameter = If(msgBody IsNot Nothing, New ObjectParameter("MsgBody", msgBody), New ObjectParameter("MsgBody", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SendMessageToPatient", msgFromPhysicianIDParameter, msgForPatientIDParameter, msgDateParameter, msgSubjectParameter, msgBodyParameter, enteredByUserIDParameter, patMsgID)
    End Function

    Public Overridable Function usp_SendMessageToPhysician(msgFromPatientID As Nullable(Of Integer), msgForPhysicianID As Nullable(Of Integer), msgDate As Nullable(Of Date), msgSubject As String, msgBody As String, enteredByUserID As Nullable(Of Integer), physMsgID As ObjectParameter) As Integer
        Dim msgFromPatientIDParameter As ObjectParameter = If(msgFromPatientID.HasValue, New ObjectParameter("MsgFromPatientID", msgFromPatientID), New ObjectParameter("MsgFromPatientID", GetType(Integer)))

        Dim msgForPhysicianIDParameter As ObjectParameter = If(msgForPhysicianID.HasValue, New ObjectParameter("MsgForPhysicianID", msgForPhysicianID), New ObjectParameter("MsgForPhysicianID", GetType(Integer)))

        Dim msgDateParameter As ObjectParameter = If(msgDate.HasValue, New ObjectParameter("MsgDate", msgDate), New ObjectParameter("MsgDate", GetType(Date)))

        Dim msgSubjectParameter As ObjectParameter = If(msgSubject IsNot Nothing, New ObjectParameter("MsgSubject", msgSubject), New ObjectParameter("MsgSubject", GetType(String)))

        Dim msgBodyParameter As ObjectParameter = If(msgBody IsNot Nothing, New ObjectParameter("MsgBody", msgBody), New ObjectParameter("MsgBody", GetType(String)))

        Dim enteredByUserIDParameter As ObjectParameter = If(enteredByUserID.HasValue, New ObjectParameter("EnteredByUserID", enteredByUserID), New ObjectParameter("EnteredByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_SendMessageToPhysician", msgFromPatientIDParameter, msgForPhysicianIDParameter, msgDateParameter, msgSubjectParameter, msgBodyParameter, enteredByUserIDParameter, physMsgID)
    End Function

    Public Overridable Function usp_TransferPatient(visitID As Nullable(Of Integer), transferDate As Nullable(Of Date), transferToRoomID As Nullable(Of Integer), transferToBedNumber As Nullable(Of Integer), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim transferDateParameter As ObjectParameter = If(transferDate.HasValue, New ObjectParameter("TransferDate", transferDate), New ObjectParameter("TransferDate", GetType(Date)))

        Dim transferToRoomIDParameter As ObjectParameter = If(transferToRoomID.HasValue, New ObjectParameter("TransferToRoomID", transferToRoomID), New ObjectParameter("TransferToRoomID", GetType(Integer)))

        Dim transferToBedNumberParameter As ObjectParameter = If(transferToBedNumber.HasValue, New ObjectParameter("TransferToBedNumber", transferToBedNumber), New ObjectParameter("TransferToBedNumber", GetType(Integer)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_TransferPatient", visitIDParameter, transferDateParameter, transferToRoomIDParameter, transferToBedNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateAllergy(allergyCd As String, allergyDesc As String) As Integer
        Dim allergyCdParameter As ObjectParameter = If(allergyCd IsNot Nothing, New ObjectParameter("AllergyCd", allergyCd), New ObjectParameter("AllergyCd", GetType(String)))

        Dim allergyDescParameter As ObjectParameter = If(allergyDesc IsNot Nothing, New ObjectParameter("AllergyDesc", allergyDesc), New ObjectParameter("AllergyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateAllergy", allergyCdParameter, allergyDescParameter)
    End Function

    Public Overridable Function usp_UpdateDentalProcedure(dentalProcCd As String, dentalProcDesc As String) As Integer
        Dim dentalProcCdParameter As ObjectParameter = If(dentalProcCd IsNot Nothing, New ObjectParameter("DentalProcCd", dentalProcCd), New ObjectParameter("DentalProcCd", GetType(String)))

        Dim dentalProcDescParameter As ObjectParameter = If(dentalProcDesc IsNot Nothing, New ObjectParameter("DentalProcDesc", dentalProcDesc), New ObjectParameter("DentalProcDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateDentalProcedure", dentalProcCdParameter, dentalProcDescParameter)
    End Function

    Public Overridable Function usp_UpdateDiagnosis(diagCd As String, diagDesc As String) As Integer
        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim diagDescParameter As ObjectParameter = If(diagDesc IsNot Nothing, New ObjectParameter("DiagDesc", diagDesc), New ObjectParameter("DiagDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateDiagnosis", diagCdParameter, diagDescParameter)
    End Function

    Public Overridable Function usp_UpdateDisability(disabilityCd As String, disabilityDesc As String) As Integer
        Dim disabilityCdParameter As ObjectParameter = If(disabilityCd IsNot Nothing, New ObjectParameter("DisabilityCd", disabilityCd), New ObjectParameter("DisabilityCd", GetType(String)))

        Dim disabilityDescParameter As ObjectParameter = If(disabilityDesc IsNot Nothing, New ObjectParameter("DisabilityDesc", disabilityDesc), New ObjectParameter("DisabilityDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateDisability", disabilityCdParameter, disabilityDescParameter)
    End Function

    Public Overridable Function usp_UpdateHabit(habitCd As String, habitDesc As String) As Integer
        Dim habitCdParameter As ObjectParameter = If(habitCd IsNot Nothing, New ObjectParameter("HabitCd", habitCd), New ObjectParameter("HabitCd", GetType(String)))

        Dim habitDescParameter As ObjectParameter = If(habitDesc IsNot Nothing, New ObjectParameter("HabitDesc", habitDesc), New ObjectParameter("HabitDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateHabit", habitCdParameter, habitDescParameter)
    End Function

    Public Overridable Function usp_UpdateHospital(hospitalID As String, hospitalname As String, hospitalSpecialityCd As String, handicapAccess As Nullable(Of Boolean), iCURoom As Nullable(Of Boolean), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim hospitalnameParameter As ObjectParameter = If(hospitalname IsNot Nothing, New ObjectParameter("Hospitalname", hospitalname), New ObjectParameter("Hospitalname", GetType(String)))

        Dim hospitalSpecialityCdParameter As ObjectParameter = If(hospitalSpecialityCd IsNot Nothing, New ObjectParameter("HospitalSpecialityCd", hospitalSpecialityCd), New ObjectParameter("HospitalSpecialityCd", GetType(String)))

        Dim handicapAccessParameter As ObjectParameter = If(handicapAccess.HasValue, New ObjectParameter("HandicapAccess", handicapAccess), New ObjectParameter("HandicapAccess", GetType(Boolean)))

        Dim iCURoomParameter As ObjectParameter = If(iCURoom.HasValue, New ObjectParameter("ICURoom", iCURoom), New ObjectParameter("ICURoom", GetType(Boolean)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateHospital", hospitalIDParameter, hospitalnameParameter, hospitalSpecialityCdParameter, handicapAccessParameter, iCURoomParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateHospitalLocation(locationCd As String, locationName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, contactNo As String, mainLocation As Nullable(Of Boolean), pinCode As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim locationNameParameter As ObjectParameter = If(locationName IsNot Nothing, New ObjectParameter("LocationName", locationName), New ObjectParameter("LocationName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim contactNoParameter As ObjectParameter = If(contactNo IsNot Nothing, New ObjectParameter("ContactNo", contactNo), New ObjectParameter("ContactNo", GetType(String)))

        Dim mainLocationParameter As ObjectParameter = If(mainLocation.HasValue, New ObjectParameter("MainLocation", mainLocation), New ObjectParameter("MainLocation", GetType(Boolean)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateHospitalLocation", locationCdParameter, locationNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, contactNoParameter, mainLocationParameter, pinCodeParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateHospitalRoom(hospitalRoomID As Nullable(Of Integer), hospitalID As String, locationCd As String, roomCd As String, roomTypeCd As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim roomCdParameter As ObjectParameter = If(roomCd IsNot Nothing, New ObjectParameter("RoomCd", roomCd), New ObjectParameter("RoomCd", GetType(String)))

        Dim roomTypeCdParameter As ObjectParameter = If(roomTypeCd IsNot Nothing, New ObjectParameter("RoomTypeCd", roomTypeCd), New ObjectParameter("RoomTypeCd", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateHospitalRoom", hospitalRoomIDParameter, hospitalIDParameter, locationCdParameter, roomCdParameter, roomTypeCdParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateHospitalRoomBed(hospitalRoomBedID As Nullable(Of Integer), hospitalRoomID As Nullable(Of Integer), bedNumber As Nullable(Of Integer), modifiedByUSerID As Nullable(Of Integer)) As Integer
        Dim hospitalRoomBedIDParameter As ObjectParameter = If(hospitalRoomBedID.HasValue, New ObjectParameter("HospitalRoomBedID", hospitalRoomBedID), New ObjectParameter("HospitalRoomBedID", GetType(Integer)))

        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Dim bedNumberParameter As ObjectParameter = If(bedNumber.HasValue, New ObjectParameter("BedNumber", bedNumber), New ObjectParameter("BedNumber", GetType(Integer)))

        Dim modifiedByUSerIDParameter As ObjectParameter = If(modifiedByUSerID.HasValue, New ObjectParameter("ModifiedByUSerID", modifiedByUSerID), New ObjectParameter("ModifiedByUSerID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateHospitalRoomBed", hospitalRoomBedIDParameter, hospitalRoomIDParameter, bedNumberParameter, modifiedByUSerIDParameter)
    End Function

    Public Overridable Function usp_UpdateImmunization(immunizationCd As String, immunizationDesc As String) As Integer
        Dim immunizationCdParameter As ObjectParameter = If(immunizationCd IsNot Nothing, New ObjectParameter("ImmunizationCd", immunizationCd), New ObjectParameter("ImmunizationCd", GetType(String)))

        Dim immunizationDescParameter As ObjectParameter = If(immunizationDesc IsNot Nothing, New ObjectParameter("ImmunizationDesc", immunizationDesc), New ObjectParameter("ImmunizationDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateImmunization", immunizationCdParameter, immunizationDescParameter)
    End Function

    Public Overridable Function usp_UpdateInsurance(insuranceCompanyID As Nullable(Of Integer), companyName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim insuranceCompanyIDParameter As ObjectParameter = If(insuranceCompanyID.HasValue, New ObjectParameter("InsuranceCompanyID", insuranceCompanyID), New ObjectParameter("InsuranceCompanyID", GetType(Integer)))

        Dim companyNameParameter As ObjectParameter = If(companyName IsNot Nothing, New ObjectParameter("CompanyName", companyName), New ObjectParameter("CompanyName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateInsurance", insuranceCompanyIDParameter, companyNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateLaboratory(laboratoryCd As String, laboratoryDesc As String) As Integer
        Dim laboratoryCdParameter As ObjectParameter = If(laboratoryCd IsNot Nothing, New ObjectParameter("LaboratoryCd", laboratoryCd), New ObjectParameter("LaboratoryCd", GetType(String)))

        Dim laboratoryDescParameter As ObjectParameter = If(laboratoryDesc IsNot Nothing, New ObjectParameter("LaboratoryDesc", laboratoryDesc), New ObjectParameter("LaboratoryDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateLaboratory", laboratoryCdParameter, laboratoryDescParameter)
    End Function

    Public Overridable Function usp_UpdateMedicalHistory(medicalHistoryCd As String, medicalHistoryDesc As String) As Integer
        Dim medicalHistoryCdParameter As ObjectParameter = If(medicalHistoryCd IsNot Nothing, New ObjectParameter("MedicalHistoryCd", medicalHistoryCd), New ObjectParameter("MedicalHistoryCd", GetType(String)))

        Dim medicalHistoryDescParameter As ObjectParameter = If(medicalHistoryDesc IsNot Nothing, New ObjectParameter("MedicalHistoryDesc", medicalHistoryDesc), New ObjectParameter("MedicalHistoryDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedicalHistory", medicalHistoryCdParameter, medicalHistoryDescParameter)
    End Function

    Public Overridable Function usp_UpdateMedicalLab(labID As Nullable(Of Integer), labName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim labIDParameter As ObjectParameter = If(labID.HasValue, New ObjectParameter("LabID", labID), New ObjectParameter("LabID", GetType(Integer)))

        Dim labNameParameter As ObjectParameter = If(labName IsNot Nothing, New ObjectParameter("LabName", labName), New ObjectParameter("LabName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedicalLab", labIDParameter, labNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateMedicalProcedure(procedureCd As String, procedureDesc As String) As Integer
        Dim procedureCdParameter As ObjectParameter = If(procedureCd IsNot Nothing, New ObjectParameter("ProcedureCd", procedureCd), New ObjectParameter("ProcedureCd", GetType(String)))

        Dim procedureDescParameter As ObjectParameter = If(procedureDesc IsNot Nothing, New ObjectParameter("ProcedureDesc", procedureDesc), New ObjectParameter("ProcedureDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedicalProcedure", procedureCdParameter, procedureDescParameter)
    End Function

    Public Overridable Function usp_UpdateMedication(medicationCd As String, medicationDesc As String) As Integer
        Dim medicationCdParameter As ObjectParameter = If(medicationCd IsNot Nothing, New ObjectParameter("MedicationCd", medicationCd), New ObjectParameter("MedicationCd", GetType(String)))

        Dim medicationDescParameter As ObjectParameter = If(medicationDesc IsNot Nothing, New ObjectParameter("MedicationDesc", medicationDesc), New ObjectParameter("MedicationDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedication", medicationCdParameter, medicationDescParameter)
    End Function

    Public Overridable Function usp_UpdateMedicationCategory(medicationCatCd As String, medicationCatDesc As String) As Integer
        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Dim medicationCatDescParameter As ObjectParameter = If(medicationCatDesc IsNot Nothing, New ObjectParameter("MedicationCatDesc", medicationCatDesc), New ObjectParameter("MedicationCatDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedicationCategory", medicationCatCdParameter, medicationCatDescParameter)
    End Function

    Public Overridable Function usp_UpdateMedicationSubCategory(medicationSubCatCd As String, medicationSubCatDesc As String, medicationCatCd As String) As Integer
        Dim medicationSubCatCdParameter As ObjectParameter = If(medicationSubCatCd IsNot Nothing, New ObjectParameter("MedicationSubCatCd", medicationSubCatCd), New ObjectParameter("MedicationSubCatCd", GetType(String)))

        Dim medicationSubCatDescParameter As ObjectParameter = If(medicationSubCatDesc IsNot Nothing, New ObjectParameter("MedicationSubCatDesc", medicationSubCatDesc), New ObjectParameter("MedicationSubCatDesc", GetType(String)))

        Dim medicationCatCdParameter As ObjectParameter = If(medicationCatCd IsNot Nothing, New ObjectParameter("MedicationCatCd", medicationCatCd), New ObjectParameter("MedicationCatCd", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateMedicationSubCategory", medicationSubCatCdParameter, medicationSubCatDescParameter, medicationCatCdParameter)
    End Function

    Public Overridable Function usp_UpdateOccupationalHazzard(occHazzardCd As String, occHazzardDesc As String) As Integer
        Dim occHazzardCdParameter As ObjectParameter = If(occHazzardCd IsNot Nothing, New ObjectParameter("OccHazzardCd", occHazzardCd), New ObjectParameter("OccHazzardCd", GetType(String)))

        Dim occHazzardDescParameter As ObjectParameter = If(occHazzardDesc IsNot Nothing, New ObjectParameter("OccHazzardDesc", occHazzardDesc), New ObjectParameter("OccHazzardDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateOccupationalHazzard", occHazzardCdParameter, occHazzardDescParameter)
    End Function

    Public Overridable Function usp_UpdateOtherHospital(hospitalID As String, hospitalname As String, hospitalSpecialityCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, businessPhone As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim hospitalIDParameter As ObjectParameter = If(hospitalID IsNot Nothing, New ObjectParameter("HospitalID", hospitalID), New ObjectParameter("HospitalID", GetType(String)))

        Dim hospitalnameParameter As ObjectParameter = If(hospitalname IsNot Nothing, New ObjectParameter("Hospitalname", hospitalname), New ObjectParameter("Hospitalname", GetType(String)))

        Dim hospitalSpecialityCdParameter As ObjectParameter = If(hospitalSpecialityCd IsNot Nothing, New ObjectParameter("HospitalSpecialityCd", hospitalSpecialityCd), New ObjectParameter("HospitalSpecialityCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateOtherHospital", hospitalIDParameter, hospitalnameParameter, hospitalSpecialityCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, businessPhoneParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatient(patientID As Nullable(Of Integer), lastName As String, firstName As String, middleInitial As String, dOB As Nullable(Of Date), genderCd As String, maritialStatusCd As String, religionCd As String, raceCd As String, occupationCd As String, employer As String, passportNumber As String, active As Nullable(Of Boolean), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim middleInitialParameter As ObjectParameter = If(middleInitial IsNot Nothing, New ObjectParameter("MiddleInitial", middleInitial), New ObjectParameter("MiddleInitial", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB.HasValue, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(Date)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim maritialStatusCdParameter As ObjectParameter = If(maritialStatusCd IsNot Nothing, New ObjectParameter("MaritialStatusCd", maritialStatusCd), New ObjectParameter("MaritialStatusCd", GetType(String)))

        Dim religionCdParameter As ObjectParameter = If(religionCd IsNot Nothing, New ObjectParameter("ReligionCd", religionCd), New ObjectParameter("ReligionCd", GetType(String)))

        Dim raceCdParameter As ObjectParameter = If(raceCd IsNot Nothing, New ObjectParameter("RaceCd", raceCd), New ObjectParameter("RaceCd", GetType(String)))

        Dim occupationCdParameter As ObjectParameter = If(occupationCd IsNot Nothing, New ObjectParameter("OccupationCd", occupationCd), New ObjectParameter("OccupationCd", GetType(String)))

        Dim employerParameter As ObjectParameter = If(employer IsNot Nothing, New ObjectParameter("Employer", employer), New ObjectParameter("Employer", GetType(String)))

        Dim passportNumberParameter As ObjectParameter = If(passportNumber IsNot Nothing, New ObjectParameter("PassportNumber", passportNumber), New ObjectParameter("PassportNumber", GetType(String)))

        Dim activeParameter As ObjectParameter = If(active.HasValue, New ObjectParameter("Active", active), New ObjectParameter("Active", GetType(Boolean)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatient", patientIDParameter, lastNameParameter, firstNameParameter, middleInitialParameter, dOBParameter, genderCdParameter, maritialStatusCdParameter, religionCdParameter, raceCdParameter, occupationCdParameter, employerParameter, passportNumberParameter, activeParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientAccident(patAccidentID As Nullable(Of Integer), patientID As Nullable(Of Integer), accidentDate As Nullable(Of Date), accidentTime As String, physicianID As Nullable(Of Integer), attendingStaffID As Nullable(Of Integer), notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patAccidentIDParameter As ObjectParameter = If(patAccidentID.HasValue, New ObjectParameter("PatAccidentID", patAccidentID), New ObjectParameter("PatAccidentID", GetType(Integer)))

        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim accidentDateParameter As ObjectParameter = If(accidentDate.HasValue, New ObjectParameter("AccidentDate", accidentDate), New ObjectParameter("AccidentDate", GetType(Date)))

        Dim accidentTimeParameter As ObjectParameter = If(accidentTime IsNot Nothing, New ObjectParameter("AccidentTime", accidentTime), New ObjectParameter("AccidentTime", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim attendingStaffIDParameter As ObjectParameter = If(attendingStaffID.HasValue, New ObjectParameter("AttendingStaffID", attendingStaffID), New ObjectParameter("AttendingStaffID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientAccident", patAccidentIDParameter, patientIDParameter, accidentDateParameter, accidentTimeParameter, physicianIDParameter, attendingStaffIDParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientAllergy(patAllergyID As Nullable(Of Integer), patientID As Nullable(Of Integer), allergyCd As String, allergyTypeCd As String, identificationDate As String, allergySeverityCd As String, allergyReaction As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patAllergyIDParameter As ObjectParameter = If(patAllergyID.HasValue, New ObjectParameter("PatAllergyID", patAllergyID), New ObjectParameter("PatAllergyID", GetType(Integer)))

        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim allergyCdParameter As ObjectParameter = If(allergyCd IsNot Nothing, New ObjectParameter("AllergyCd", allergyCd), New ObjectParameter("AllergyCd", GetType(String)))

        Dim allergyTypeCdParameter As ObjectParameter = If(allergyTypeCd IsNot Nothing, New ObjectParameter("AllergyTypeCd", allergyTypeCd), New ObjectParameter("AllergyTypeCd", GetType(String)))

        Dim identificationDateParameter As ObjectParameter = If(identificationDate IsNot Nothing, New ObjectParameter("IdentificationDate", identificationDate), New ObjectParameter("IdentificationDate", GetType(String)))

        Dim allergySeverityCdParameter As ObjectParameter = If(allergySeverityCd IsNot Nothing, New ObjectParameter("AllergySeverityCd", allergySeverityCd), New ObjectParameter("AllergySeverityCd", GetType(String)))

        Dim allergyReactionParameter As ObjectParameter = If(allergyReaction IsNot Nothing, New ObjectParameter("AllergyReaction", allergyReaction), New ObjectParameter("AllergyReaction", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientAllergy", patAllergyIDParameter, patientIDParameter, allergyCdParameter, allergyTypeCdParameter, identificationDateParameter, allergySeverityCdParameter, allergyReactionParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientAssociatedParty(patientID As Nullable(Of Integer), associatedPartyLastName As String, associatedPartyFirstName As String, relationshipCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim associatedPartyLastNameParameter As ObjectParameter = If(associatedPartyLastName IsNot Nothing, New ObjectParameter("AssociatedPartyLastName", associatedPartyLastName), New ObjectParameter("AssociatedPartyLastName", GetType(String)))

        Dim associatedPartyFirstNameParameter As ObjectParameter = If(associatedPartyFirstName IsNot Nothing, New ObjectParameter("AssociatedPartyFirstName", associatedPartyFirstName), New ObjectParameter("AssociatedPartyFirstName", GetType(String)))

        Dim relationshipCdParameter As ObjectParameter = If(relationshipCd IsNot Nothing, New ObjectParameter("RelationshipCd", relationshipCd), New ObjectParameter("RelationshipCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientAssociatedParty", patientIDParameter, associatedPartyLastNameParameter, associatedPartyFirstNameParameter, relationshipCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientDemographic(patientID As Nullable(Of Integer), addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientDemographic", patientIDParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientDentalProcedure(patDentalProcID As Nullable(Of Integer), dentalProcCd As String, dentalProcDate As Nullable(Of Date), dentalClinicName As String, dentistName As String, notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patDentalProcIDParameter As ObjectParameter = If(patDentalProcID.HasValue, New ObjectParameter("PatDentalProcID", patDentalProcID), New ObjectParameter("PatDentalProcID", GetType(Integer)))

        Dim dentalProcCdParameter As ObjectParameter = If(dentalProcCd IsNot Nothing, New ObjectParameter("DentalProcCd", dentalProcCd), New ObjectParameter("DentalProcCd", GetType(String)))

        Dim dentalProcDateParameter As ObjectParameter = If(dentalProcDate.HasValue, New ObjectParameter("DentalProcDate", dentalProcDate), New ObjectParameter("DentalProcDate", GetType(Date)))

        Dim dentalClinicNameParameter As ObjectParameter = If(dentalClinicName IsNot Nothing, New ObjectParameter("DentalClinicName", dentalClinicName), New ObjectParameter("DentalClinicName", GetType(String)))

        Dim dentistNameParameter As ObjectParameter = If(dentistName IsNot Nothing, New ObjectParameter("DentistName", dentistName), New ObjectParameter("DentistName", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientDentalProcedure", patDentalProcIDParameter, dentalProcCdParameter, dentalProcDateParameter, dentalClinicNameParameter, dentistNameParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientDiagnosis(patDiagnosisID As Nullable(Of Integer), diagCd As String, diagDate As Nullable(Of Date), diagCategoryCd As String, notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patDiagnosisIDParameter As ObjectParameter = If(patDiagnosisID.HasValue, New ObjectParameter("PatDiagnosisID", patDiagnosisID), New ObjectParameter("PatDiagnosisID", GetType(Integer)))

        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim diagDateParameter As ObjectParameter = If(diagDate.HasValue, New ObjectParameter("DiagDate", diagDate), New ObjectParameter("DiagDate", GetType(Date)))

        Dim diagCategoryCdParameter As ObjectParameter = If(diagCategoryCd IsNot Nothing, New ObjectParameter("DiagCategoryCd", diagCategoryCd), New ObjectParameter("DiagCategoryCd", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientDiagnosis", patDiagnosisIDParameter, diagCdParameter, diagDateParameter, diagCategoryCdParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientDisability(patDisabilityID As Nullable(Of Integer), patientID As Nullable(Of Integer), disabilityCd As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patDisabilityIDParameter As ObjectParameter = If(patDisabilityID.HasValue, New ObjectParameter("PatDisabilityID", patDisabilityID), New ObjectParameter("PatDisabilityID", GetType(Integer)))

        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim disabilityCdParameter As ObjectParameter = If(disabilityCd IsNot Nothing, New ObjectParameter("DisabilityCd", disabilityCd), New ObjectParameter("DisabilityCd", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientDisability", patDisabilityIDParameter, patientIDParameter, disabilityCdParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientGeneralHistory(patientID As Nullable(Of Integer), generalHistory As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim generalHistoryParameter As ObjectParameter = If(generalHistory IsNot Nothing, New ObjectParameter("GeneralHistory", generalHistory), New ObjectParameter("GeneralHistory", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientGeneralHistory", patientIDParameter, generalHistoryParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientGuarantor(patientID As Nullable(Of Integer), guarantorLastName As String, guarantorFirstName As String, relationshipCd As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim guarantorLastNameParameter As ObjectParameter = If(guarantorLastName IsNot Nothing, New ObjectParameter("GuarantorLastName", guarantorLastName), New ObjectParameter("GuarantorLastName", GetType(String)))

        Dim guarantorFirstNameParameter As ObjectParameter = If(guarantorFirstName IsNot Nothing, New ObjectParameter("GuarantorFirstName", guarantorFirstName), New ObjectParameter("GuarantorFirstName", GetType(String)))

        Dim relationshipCdParameter As ObjectParameter = If(relationshipCd IsNot Nothing, New ObjectParameter("RelationshipCd", relationshipCd), New ObjectParameter("RelationshipCd", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientGuarantor", patientIDParameter, guarantorLastNameParameter, guarantorFirstNameParameter, relationshipCdParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientImmunization(patImmunizationID As Nullable(Of Integer), immunizationCd As String, immunizationDate As Nullable(Of Date), immunizationGivenByID As Nullable(Of Integer), immunizationNotes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patImmunizationIDParameter As ObjectParameter = If(patImmunizationID.HasValue, New ObjectParameter("PatImmunizationID", patImmunizationID), New ObjectParameter("PatImmunizationID", GetType(Integer)))

        Dim immunizationCdParameter As ObjectParameter = If(immunizationCd IsNot Nothing, New ObjectParameter("ImmunizationCd", immunizationCd), New ObjectParameter("ImmunizationCd", GetType(String)))

        Dim immunizationDateParameter As ObjectParameter = If(immunizationDate.HasValue, New ObjectParameter("ImmunizationDate", immunizationDate), New ObjectParameter("ImmunizationDate", GetType(Date)))

        Dim immunizationGivenByIDParameter As ObjectParameter = If(immunizationGivenByID.HasValue, New ObjectParameter("ImmunizationGivenByID", immunizationGivenByID), New ObjectParameter("ImmunizationGivenByID", GetType(Integer)))

        Dim immunizationNotesParameter As ObjectParameter = If(immunizationNotes IsNot Nothing, New ObjectParameter("ImmunizationNotes", immunizationNotes), New ObjectParameter("ImmunizationNotes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientImmunization", patImmunizationIDParameter, immunizationCdParameter, immunizationDateParameter, immunizationGivenByIDParameter, immunizationNotesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientInpatientVisitDailyRecord(patInpVisitDailyRecordID As Nullable(Of Integer), parameterValue As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patInpVisitDailyRecordIDParameter As ObjectParameter = If(patInpVisitDailyRecordID.HasValue, New ObjectParameter("PatInpVisitDailyRecordID", patInpVisitDailyRecordID), New ObjectParameter("PatInpVisitDailyRecordID", GetType(Integer)))

        Dim parameterValueParameter As ObjectParameter = If(parameterValue IsNot Nothing, New ObjectParameter("ParameterValue", parameterValue), New ObjectParameter("ParameterValue", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientInpatientVisitDailyRecord", patInpVisitDailyRecordIDParameter, parameterValueParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientInsurance(patientID As Nullable(Of Integer), insuranceCompanyID As Nullable(Of Integer), insuranceNumber As String, policyNumber As String, fromDate As Nullable(Of Date), coverageAmount As Nullable(Of Decimal), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim insuranceCompanyIDParameter As ObjectParameter = If(insuranceCompanyID.HasValue, New ObjectParameter("InsuranceCompanyID", insuranceCompanyID), New ObjectParameter("InsuranceCompanyID", GetType(Integer)))

        Dim insuranceNumberParameter As ObjectParameter = If(insuranceNumber IsNot Nothing, New ObjectParameter("InsuranceNumber", insuranceNumber), New ObjectParameter("InsuranceNumber", GetType(String)))

        Dim policyNumberParameter As ObjectParameter = If(policyNumber IsNot Nothing, New ObjectParameter("PolicyNumber", policyNumber), New ObjectParameter("PolicyNumber", GetType(String)))

        Dim fromDateParameter As ObjectParameter = If(fromDate.HasValue, New ObjectParameter("FromDate", fromDate), New ObjectParameter("FromDate", GetType(Date)))

        Dim coverageAmountParameter As ObjectParameter = If(coverageAmount.HasValue, New ObjectParameter("CoverageAmount", coverageAmount), New ObjectParameter("CoverageAmount", GetType(Decimal)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientInsurance", patientIDParameter, insuranceCompanyIDParameter, insuranceNumberParameter, policyNumberParameter, fromDateParameter, coverageAmountParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientLaboratoryResult(patLaboratoryID As Nullable(Of Integer), resultDate As Nullable(Of Date), labResult As String, abnormalFlagCd As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patLaboratoryIDParameter As ObjectParameter = If(patLaboratoryID.HasValue, New ObjectParameter("PatLaboratoryID", patLaboratoryID), New ObjectParameter("PatLaboratoryID", GetType(Integer)))

        Dim resultDateParameter As ObjectParameter = If(resultDate.HasValue, New ObjectParameter("ResultDate", resultDate), New ObjectParameter("ResultDate", GetType(Date)))

        Dim labResultParameter As ObjectParameter = If(labResult IsNot Nothing, New ObjectParameter("LabResult", labResult), New ObjectParameter("LabResult", GetType(String)))

        Dim abnormalFlagCdParameter As ObjectParameter = If(abnormalFlagCd IsNot Nothing, New ObjectParameter("AbnormalFlagCd", abnormalFlagCd), New ObjectParameter("AbnormalFlagCd", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientLaboratoryResult", patLaboratoryIDParameter, resultDateParameter, labResultParameter, abnormalFlagCdParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientMedicalProcedure(patProcedureID As Nullable(Of Integer), procedureCd As String, procedureDate As Nullable(Of Date), procedurePractitionerTypeCd As String, consultingPhysicianID As Nullable(Of Integer), procedureStaffID As Nullable(Of Integer), notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patProcedureIDParameter As ObjectParameter = If(patProcedureID.HasValue, New ObjectParameter("PatProcedureID", patProcedureID), New ObjectParameter("PatProcedureID", GetType(Integer)))

        Dim procedureCdParameter As ObjectParameter = If(procedureCd IsNot Nothing, New ObjectParameter("ProcedureCd", procedureCd), New ObjectParameter("ProcedureCd", GetType(String)))

        Dim procedureDateParameter As ObjectParameter = If(procedureDate.HasValue, New ObjectParameter("ProcedureDate", procedureDate), New ObjectParameter("ProcedureDate", GetType(Date)))

        Dim procedurePractitionerTypeCdParameter As ObjectParameter = If(procedurePractitionerTypeCd IsNot Nothing, New ObjectParameter("ProcedurePractitionerTypeCd", procedurePractitionerTypeCd), New ObjectParameter("ProcedurePractitionerTypeCd", GetType(String)))

        Dim consultingPhysicianIDParameter As ObjectParameter = If(consultingPhysicianID.HasValue, New ObjectParameter("ConsultingPhysicianID", consultingPhysicianID), New ObjectParameter("ConsultingPhysicianID", GetType(Integer)))

        Dim procedureStaffIDParameter As ObjectParameter = If(procedureStaffID.HasValue, New ObjectParameter("ProcedureStaffID", procedureStaffID), New ObjectParameter("ProcedureStaffID", GetType(Integer)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientMedicalProcedure", patProcedureIDParameter, procedureCdParameter, procedureDateParameter, procedurePractitionerTypeCdParameter, consultingPhysicianIDParameter, procedureStaffIDParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientMedicalReferal(patMedicalReferalID As Nullable(Of Integer), referToPhysicianID As Nullable(Of Integer), referDate As Nullable(Of Date), diagCd As String, notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patMedicalReferalIDParameter As ObjectParameter = If(patMedicalReferalID.HasValue, New ObjectParameter("PatMedicalReferalID", patMedicalReferalID), New ObjectParameter("PatMedicalReferalID", GetType(Integer)))

        Dim referToPhysicianIDParameter As ObjectParameter = If(referToPhysicianID.HasValue, New ObjectParameter("ReferToPhysicianID", referToPhysicianID), New ObjectParameter("ReferToPhysicianID", GetType(Integer)))

        Dim referDateParameter As ObjectParameter = If(referDate.HasValue, New ObjectParameter("ReferDate", referDate), New ObjectParameter("ReferDate", GetType(Date)))

        Dim diagCdParameter As ObjectParameter = If(diagCd IsNot Nothing, New ObjectParameter("DiagCd", diagCd), New ObjectParameter("DiagCd", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientMedicalReferal", patMedicalReferalIDParameter, referToPhysicianIDParameter, referDateParameter, diagCdParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientMedication(patMedicationID As Nullable(Of Integer), medicationCd As String, startDate As Nullable(Of Date), endDate As Nullable(Of Date), minRequestedGiveAmount As Nullable(Of Integer), maxRequestedGiveAmount As Nullable(Of Integer), requestedGiveUnit As String, physicianPharmacyInstruction As String, physicianAdministrationInstruction As String, noOfRefill As Nullable(Of Integer), dosage As String, medicationAdministrationRootCd As String, medicationAdministrativeSiteCd As String, medicationAdministrationDeviceCd As String, medicationAdministrationMethodCd As String, specialNotes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patMedicationIDParameter As ObjectParameter = If(patMedicationID.HasValue, New ObjectParameter("PatMedicationID", patMedicationID), New ObjectParameter("PatMedicationID", GetType(Integer)))

        Dim medicationCdParameter As ObjectParameter = If(medicationCd IsNot Nothing, New ObjectParameter("MedicationCd", medicationCd), New ObjectParameter("MedicationCd", GetType(String)))

        Dim startDateParameter As ObjectParameter = If(startDate.HasValue, New ObjectParameter("StartDate", startDate), New ObjectParameter("StartDate", GetType(Date)))

        Dim endDateParameter As ObjectParameter = If(endDate.HasValue, New ObjectParameter("EndDate", endDate), New ObjectParameter("EndDate", GetType(Date)))

        Dim minRequestedGiveAmountParameter As ObjectParameter = If(minRequestedGiveAmount.HasValue, New ObjectParameter("MinRequestedGiveAmount", minRequestedGiveAmount), New ObjectParameter("MinRequestedGiveAmount", GetType(Integer)))

        Dim maxRequestedGiveAmountParameter As ObjectParameter = If(maxRequestedGiveAmount.HasValue, New ObjectParameter("MaxRequestedGiveAmount", maxRequestedGiveAmount), New ObjectParameter("MaxRequestedGiveAmount", GetType(Integer)))

        Dim requestedGiveUnitParameter As ObjectParameter = If(requestedGiveUnit IsNot Nothing, New ObjectParameter("RequestedGiveUnit", requestedGiveUnit), New ObjectParameter("RequestedGiveUnit", GetType(String)))

        Dim physicianPharmacyInstructionParameter As ObjectParameter = If(physicianPharmacyInstruction IsNot Nothing, New ObjectParameter("PhysicianPharmacyInstruction", physicianPharmacyInstruction), New ObjectParameter("PhysicianPharmacyInstruction", GetType(String)))

        Dim physicianAdministrationInstructionParameter As ObjectParameter = If(physicianAdministrationInstruction IsNot Nothing, New ObjectParameter("PhysicianAdministrationInstruction", physicianAdministrationInstruction), New ObjectParameter("PhysicianAdministrationInstruction", GetType(String)))

        Dim noOfRefillParameter As ObjectParameter = If(noOfRefill.HasValue, New ObjectParameter("NoOfRefill", noOfRefill), New ObjectParameter("NoOfRefill", GetType(Integer)))

        Dim dosageParameter As ObjectParameter = If(dosage IsNot Nothing, New ObjectParameter("Dosage", dosage), New ObjectParameter("Dosage", GetType(String)))

        Dim medicationAdministrationRootCdParameter As ObjectParameter = If(medicationAdministrationRootCd IsNot Nothing, New ObjectParameter("MedicationAdministrationRootCd", medicationAdministrationRootCd), New ObjectParameter("MedicationAdministrationRootCd", GetType(String)))

        Dim medicationAdministrativeSiteCdParameter As ObjectParameter = If(medicationAdministrativeSiteCd IsNot Nothing, New ObjectParameter("MedicationAdministrativeSiteCd", medicationAdministrativeSiteCd), New ObjectParameter("MedicationAdministrativeSiteCd", GetType(String)))

        Dim medicationAdministrationDeviceCdParameter As ObjectParameter = If(medicationAdministrationDeviceCd IsNot Nothing, New ObjectParameter("MedicationAdministrationDeviceCd", medicationAdministrationDeviceCd), New ObjectParameter("MedicationAdministrationDeviceCd", GetType(String)))

        Dim medicationAdministrationMethodCdParameter As ObjectParameter = If(medicationAdministrationMethodCd IsNot Nothing, New ObjectParameter("MedicationAdministrationMethodCd", medicationAdministrationMethodCd), New ObjectParameter("MedicationAdministrationMethodCd", GetType(String)))

        Dim specialNotesParameter As ObjectParameter = If(specialNotes IsNot Nothing, New ObjectParameter("SpecialNotes", specialNotes), New ObjectParameter("SpecialNotes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientMedication", patMedicationIDParameter, medicationCdParameter, startDateParameter, endDateParameter, minRequestedGiveAmountParameter, maxRequestedGiveAmountParameter, requestedGiveUnitParameter, physicianPharmacyInstructionParameter, physicianAdministrationInstructionParameter, noOfRefillParameter, dosageParameter, medicationAdministrationRootCdParameter, medicationAdministrativeSiteCdParameter, medicationAdministrationDeviceCdParameter, medicationAdministrationMethodCdParameter, specialNotesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientPhysiotherapy(patPhysiotherapyID As Nullable(Of Integer), physiotherapyReason As String, physiotherapyCd As String, physiotherapyDate As Nullable(Of Date), physiotherapistName As String, notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patPhysiotherapyIDParameter As ObjectParameter = If(patPhysiotherapyID.HasValue, New ObjectParameter("PatPhysiotherapyID", patPhysiotherapyID), New ObjectParameter("PatPhysiotherapyID", GetType(Integer)))

        Dim physiotherapyReasonParameter As ObjectParameter = If(physiotherapyReason IsNot Nothing, New ObjectParameter("PhysiotherapyReason", physiotherapyReason), New ObjectParameter("PhysiotherapyReason", GetType(String)))

        Dim physiotherapyCdParameter As ObjectParameter = If(physiotherapyCd IsNot Nothing, New ObjectParameter("PhysiotherapyCd", physiotherapyCd), New ObjectParameter("PhysiotherapyCd", GetType(String)))

        Dim physiotherapyDateParameter As ObjectParameter = If(physiotherapyDate.HasValue, New ObjectParameter("PhysiotherapyDate", physiotherapyDate), New ObjectParameter("PhysiotherapyDate", GetType(Date)))

        Dim physiotherapistNameParameter As ObjectParameter = If(physiotherapistName IsNot Nothing, New ObjectParameter("PhysiotherapistName", physiotherapistName), New ObjectParameter("PhysiotherapistName", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientPhysiotherapy", patPhysiotherapyIDParameter, physiotherapyReasonParameter, physiotherapyCdParameter, physiotherapyDateParameter, physiotherapistNameParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientPreference(patientID As Nullable(Of Integer), physicianID As Nullable(Of Integer), pharmacyID As Nullable(Of Integer), medicalLabID As Nullable(Of Integer), radiologyLabID As Nullable(Of Integer), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim pharmacyIDParameter As ObjectParameter = If(pharmacyID.HasValue, New ObjectParameter("PharmacyID", pharmacyID), New ObjectParameter("PharmacyID", GetType(Integer)))

        Dim medicalLabIDParameter As ObjectParameter = If(medicalLabID.HasValue, New ObjectParameter("MedicalLabID", medicalLabID), New ObjectParameter("MedicalLabID", GetType(Integer)))

        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientPreference", patientIDParameter, physicianIDParameter, pharmacyIDParameter, medicalLabIDParameter, radiologyLabIDParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientRadiologyResult(patRadiologyID As Nullable(Of Integer), resultDate As Nullable(Of Date), radiologyResult As String, radiologyImage As Byte(), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patRadiologyIDParameter As ObjectParameter = If(patRadiologyID.HasValue, New ObjectParameter("PatRadiologyID", patRadiologyID), New ObjectParameter("PatRadiologyID", GetType(Integer)))

        Dim resultDateParameter As ObjectParameter = If(resultDate.HasValue, New ObjectParameter("ResultDate", resultDate), New ObjectParameter("ResultDate", GetType(Date)))

        Dim radiologyResultParameter As ObjectParameter = If(radiologyResult IsNot Nothing, New ObjectParameter("RadiologyResult", radiologyResult), New ObjectParameter("RadiologyResult", GetType(String)))

        Dim radiologyImageParameter As ObjectParameter = If(radiologyImage IsNot Nothing, New ObjectParameter("RadiologyImage", radiologyImage), New ObjectParameter("RadiologyImage", GetType(Byte())))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientRadiologyResult", patRadiologyIDParameter, resultDateParameter, radiologyResultParameter, radiologyImageParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientRecurringVisit(patRecurringVisitID As Nullable(Of Integer), recurringVisitReason As String, recurringDate As Nullable(Of Date), notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patRecurringVisitIDParameter As ObjectParameter = If(patRecurringVisitID.HasValue, New ObjectParameter("PatRecurringVisitID", patRecurringVisitID), New ObjectParameter("PatRecurringVisitID", GetType(Integer)))

        Dim recurringVisitReasonParameter As ObjectParameter = If(recurringVisitReason IsNot Nothing, New ObjectParameter("RecurringVisitReason", recurringVisitReason), New ObjectParameter("RecurringVisitReason", GetType(String)))

        Dim recurringDateParameter As ObjectParameter = If(recurringDate.HasValue, New ObjectParameter("RecurringDate", recurringDate), New ObjectParameter("RecurringDate", GetType(Date)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientRecurringVisit", patRecurringVisitIDParameter, recurringVisitReasonParameter, recurringDateParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientVisionCare(patVisionCareID As Nullable(Of Integer), visionCareCd As String, visionCareDate As Nullable(Of Date), visionClinicName As String, visionCareProviderName As String, notes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patVisionCareIDParameter As ObjectParameter = If(patVisionCareID.HasValue, New ObjectParameter("PatVisionCareID", patVisionCareID), New ObjectParameter("PatVisionCareID", GetType(Integer)))

        Dim visionCareCdParameter As ObjectParameter = If(visionCareCd IsNot Nothing, New ObjectParameter("VisionCareCd", visionCareCd), New ObjectParameter("VisionCareCd", GetType(String)))

        Dim visionCareDateParameter As ObjectParameter = If(visionCareDate.HasValue, New ObjectParameter("VisionCareDate", visionCareDate), New ObjectParameter("VisionCareDate", GetType(Date)))

        Dim visionClinicNameParameter As ObjectParameter = If(visionClinicName IsNot Nothing, New ObjectParameter("VisionClinicName", visionClinicName), New ObjectParameter("VisionClinicName", GetType(String)))

        Dim visionCareProviderNameParameter As ObjectParameter = If(visionCareProviderName IsNot Nothing, New ObjectParameter("VisionCareProviderName", visionCareProviderName), New ObjectParameter("VisionCareProviderName", GetType(String)))

        Dim notesParameter As ObjectParameter = If(notes IsNot Nothing, New ObjectParameter("Notes", notes), New ObjectParameter("Notes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientVisionCare", patVisionCareIDParameter, visionCareCdParameter, visionCareDateParameter, visionClinicNameParameter, visionCareProviderNameParameter, notesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientVisit(visitID As Nullable(Of Integer), patientID As Nullable(Of Integer), locationCd As String, visitType As String, physicianID As Nullable(Of Integer), referringPhysicianID As Nullable(Of Integer), consultingPhysicianID As Nullable(Of Integer), admitDate As Nullable(Of Date), hospitalRoomID As Nullable(Of Integer), bedNumber As Nullable(Of Integer), transferDate As Nullable(Of Date), transferToRoomID As Nullable(Of Integer), transferToBedNumber As Nullable(Of Integer), dischargeDate As Nullable(Of Date), deathInHospital As Nullable(Of Boolean), deathDate As Nullable(Of Date), dischargeNotes As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim patientIDParameter As ObjectParameter = If(patientID.HasValue, New ObjectParameter("PatientID", patientID), New ObjectParameter("PatientID", GetType(Integer)))

        Dim locationCdParameter As ObjectParameter = If(locationCd IsNot Nothing, New ObjectParameter("LocationCd", locationCd), New ObjectParameter("LocationCd", GetType(String)))

        Dim visitTypeParameter As ObjectParameter = If(visitType IsNot Nothing, New ObjectParameter("VisitType", visitType), New ObjectParameter("VisitType", GetType(String)))

        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim referringPhysicianIDParameter As ObjectParameter = If(referringPhysicianID.HasValue, New ObjectParameter("ReferringPhysicianID", referringPhysicianID), New ObjectParameter("ReferringPhysicianID", GetType(Integer)))

        Dim consultingPhysicianIDParameter As ObjectParameter = If(consultingPhysicianID.HasValue, New ObjectParameter("ConsultingPhysicianID", consultingPhysicianID), New ObjectParameter("ConsultingPhysicianID", GetType(Integer)))

        Dim admitDateParameter As ObjectParameter = If(admitDate.HasValue, New ObjectParameter("AdmitDate", admitDate), New ObjectParameter("AdmitDate", GetType(Date)))

        Dim hospitalRoomIDParameter As ObjectParameter = If(hospitalRoomID.HasValue, New ObjectParameter("HospitalRoomID", hospitalRoomID), New ObjectParameter("HospitalRoomID", GetType(Integer)))

        Dim bedNumberParameter As ObjectParameter = If(bedNumber.HasValue, New ObjectParameter("BedNumber", bedNumber), New ObjectParameter("BedNumber", GetType(Integer)))

        Dim transferDateParameter As ObjectParameter = If(transferDate.HasValue, New ObjectParameter("TransferDate", transferDate), New ObjectParameter("TransferDate", GetType(Date)))

        Dim transferToRoomIDParameter As ObjectParameter = If(transferToRoomID.HasValue, New ObjectParameter("TransferToRoomID", transferToRoomID), New ObjectParameter("TransferToRoomID", GetType(Integer)))

        Dim transferToBedNumberParameter As ObjectParameter = If(transferToBedNumber.HasValue, New ObjectParameter("TransferToBedNumber", transferToBedNumber), New ObjectParameter("TransferToBedNumber", GetType(Integer)))

        Dim dischargeDateParameter As ObjectParameter = If(dischargeDate.HasValue, New ObjectParameter("DischargeDate", dischargeDate), New ObjectParameter("DischargeDate", GetType(Date)))

        Dim deathInHospitalParameter As ObjectParameter = If(deathInHospital.HasValue, New ObjectParameter("DeathInHospital", deathInHospital), New ObjectParameter("DeathInHospital", GetType(Boolean)))

        Dim deathDateParameter As ObjectParameter = If(deathDate.HasValue, New ObjectParameter("DeathDate", deathDate), New ObjectParameter("DeathDate", GetType(Date)))

        Dim dischargeNotesParameter As ObjectParameter = If(dischargeNotes IsNot Nothing, New ObjectParameter("DischargeNotes", dischargeNotes), New ObjectParameter("DischargeNotes", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientVisit", visitIDParameter, patientIDParameter, locationCdParameter, visitTypeParameter, physicianIDParameter, referringPhysicianIDParameter, consultingPhysicianIDParameter, admitDateParameter, hospitalRoomIDParameter, bedNumberParameter, transferDateParameter, transferToRoomIDParameter, transferToBedNumberParameter, dischargeDateParameter, deathInHospitalParameter, deathDateParameter, dischargeNotesParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientVisitPayment(patVisitPaymentID As Nullable(Of Integer), paymentMethodCd As String, totalPayment As Nullable(Of Double), modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patVisitPaymentIDParameter As ObjectParameter = If(patVisitPaymentID.HasValue, New ObjectParameter("PatVisitPaymentID", patVisitPaymentID), New ObjectParameter("PatVisitPaymentID", GetType(Integer)))

        Dim paymentMethodCdParameter As ObjectParameter = If(paymentMethodCd IsNot Nothing, New ObjectParameter("PaymentMethodCd", paymentMethodCd), New ObjectParameter("PaymentMethodCd", GetType(String)))

        Dim totalPaymentParameter As ObjectParameter = If(totalPayment.HasValue, New ObjectParameter("TotalPayment", totalPayment), New ObjectParameter("TotalPayment", GetType(Double)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientVisitPayment", patVisitPaymentIDParameter, paymentMethodCdParameter, totalPaymentParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePatientVitalSign(patVitalSignID As Nullable(Of Integer), visitID As Nullable(Of Integer), temperature As Nullable(Of Decimal), pulse As Nullable(Of Decimal), bloodPressure As Nullable(Of Decimal), repositaryRate As Nullable(Of Decimal), painScale As Nullable(Of Integer), urinaryContinence As String, emotionalDistress As String, spirometry As String, glucose As String, functionalStatus As String, oxygenSaturationLevel As String, height As Nullable(Of Decimal), weight As Nullable(Of Decimal), vitalSignDate As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim patVitalSignIDParameter As ObjectParameter = If(patVitalSignID.HasValue, New ObjectParameter("PatVitalSignID", patVitalSignID), New ObjectParameter("PatVitalSignID", GetType(Integer)))

        Dim visitIDParameter As ObjectParameter = If(visitID.HasValue, New ObjectParameter("VisitID", visitID), New ObjectParameter("VisitID", GetType(Integer)))

        Dim temperatureParameter As ObjectParameter = If(temperature.HasValue, New ObjectParameter("Temperature", temperature), New ObjectParameter("Temperature", GetType(Decimal)))

        Dim pulseParameter As ObjectParameter = If(pulse.HasValue, New ObjectParameter("Pulse", pulse), New ObjectParameter("Pulse", GetType(Decimal)))

        Dim bloodPressureParameter As ObjectParameter = If(bloodPressure.HasValue, New ObjectParameter("BloodPressure", bloodPressure), New ObjectParameter("BloodPressure", GetType(Decimal)))

        Dim repositaryRateParameter As ObjectParameter = If(repositaryRate.HasValue, New ObjectParameter("RepositaryRate", repositaryRate), New ObjectParameter("RepositaryRate", GetType(Decimal)))

        Dim painScaleParameter As ObjectParameter = If(painScale.HasValue, New ObjectParameter("PainScale", painScale), New ObjectParameter("PainScale", GetType(Integer)))

        Dim urinaryContinenceParameter As ObjectParameter = If(urinaryContinence IsNot Nothing, New ObjectParameter("UrinaryContinence", urinaryContinence), New ObjectParameter("UrinaryContinence", GetType(String)))

        Dim emotionalDistressParameter As ObjectParameter = If(emotionalDistress IsNot Nothing, New ObjectParameter("EmotionalDistress", emotionalDistress), New ObjectParameter("EmotionalDistress", GetType(String)))

        Dim spirometryParameter As ObjectParameter = If(spirometry IsNot Nothing, New ObjectParameter("Spirometry", spirometry), New ObjectParameter("Spirometry", GetType(String)))

        Dim glucoseParameter As ObjectParameter = If(glucose IsNot Nothing, New ObjectParameter("Glucose", glucose), New ObjectParameter("Glucose", GetType(String)))

        Dim functionalStatusParameter As ObjectParameter = If(functionalStatus IsNot Nothing, New ObjectParameter("FunctionalStatus", functionalStatus), New ObjectParameter("FunctionalStatus", GetType(String)))

        Dim oxygenSaturationLevelParameter As ObjectParameter = If(oxygenSaturationLevel IsNot Nothing, New ObjectParameter("OxygenSaturationLevel", oxygenSaturationLevel), New ObjectParameter("OxygenSaturationLevel", GetType(String)))

        Dim heightParameter As ObjectParameter = If(height.HasValue, New ObjectParameter("Height", height), New ObjectParameter("Height", GetType(Decimal)))

        Dim weightParameter As ObjectParameter = If(weight.HasValue, New ObjectParameter("Weight", weight), New ObjectParameter("Weight", GetType(Decimal)))

        Dim vitalSignDateParameter As ObjectParameter = If(vitalSignDate IsNot Nothing, New ObjectParameter("VitalSignDate", vitalSignDate), New ObjectParameter("VitalSignDate", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePatientVitalSign", patVitalSignIDParameter, visitIDParameter, temperatureParameter, pulseParameter, bloodPressureParameter, repositaryRateParameter, painScaleParameter, urinaryContinenceParameter, emotionalDistressParameter, spirometryParameter, glucoseParameter, functionalStatusParameter, oxygenSaturationLevelParameter, heightParameter, weightParameter, vitalSignDateParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePharmacy(pharmacyID As Nullable(Of Integer), pharmacyName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim pharmacyIDParameter As ObjectParameter = If(pharmacyID.HasValue, New ObjectParameter("PharmacyID", pharmacyID), New ObjectParameter("PharmacyID", GetType(Integer)))

        Dim pharmacyNameParameter As ObjectParameter = If(pharmacyName IsNot Nothing, New ObjectParameter("PharmacyName", pharmacyName), New ObjectParameter("PharmacyName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePharmacy", pharmacyIDParameter, pharmacyNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePhysician(physicianID As Nullable(Of Integer), physicianLastName As String, physicianFirstName As String, middleInitial As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, countryCd As String, homePhone As String, businessPhone As String, emailAddress As String, faxNumber As String, providerSpecialityCd As String, physicianTypeCd As String, genderCd As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim physicianIDParameter As ObjectParameter = If(physicianID.HasValue, New ObjectParameter("PhysicianID", physicianID), New ObjectParameter("PhysicianID", GetType(Integer)))

        Dim physicianLastNameParameter As ObjectParameter = If(physicianLastName IsNot Nothing, New ObjectParameter("PhysicianLastName", physicianLastName), New ObjectParameter("PhysicianLastName", GetType(String)))

        Dim physicianFirstNameParameter As ObjectParameter = If(physicianFirstName IsNot Nothing, New ObjectParameter("PhysicianFirstName", physicianFirstName), New ObjectParameter("PhysicianFirstName", GetType(String)))

        Dim middleInitialParameter As ObjectParameter = If(middleInitial IsNot Nothing, New ObjectParameter("MiddleInitial", middleInitial), New ObjectParameter("MiddleInitial", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryCdParameter As ObjectParameter = If(countryCd IsNot Nothing, New ObjectParameter("CountryCd", countryCd), New ObjectParameter("CountryCd", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim providerSpecialityCdParameter As ObjectParameter = If(providerSpecialityCd IsNot Nothing, New ObjectParameter("ProviderSpecialityCd", providerSpecialityCd), New ObjectParameter("ProviderSpecialityCd", GetType(String)))

        Dim physicianTypeCdParameter As ObjectParameter = If(physicianTypeCd IsNot Nothing, New ObjectParameter("PhysicianTypeCd", physicianTypeCd), New ObjectParameter("PhysicianTypeCd", GetType(String)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePhysician", physicianIDParameter, physicianLastNameParameter, physicianFirstNameParameter, middleInitialParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryCdParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, faxNumberParameter, providerSpecialityCdParameter, physicianTypeCdParameter, genderCdParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdatePhysiotherapy(physiotherapyCd As String, physiotherapyDesc As String) As Integer
        Dim physiotherapyCdParameter As ObjectParameter = If(physiotherapyCd IsNot Nothing, New ObjectParameter("PhysiotherapyCd", physiotherapyCd), New ObjectParameter("PhysiotherapyCd", GetType(String)))

        Dim physiotherapyDescParameter As ObjectParameter = If(physiotherapyDesc IsNot Nothing, New ObjectParameter("PhysiotherapyDesc", physiotherapyDesc), New ObjectParameter("PhysiotherapyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdatePhysiotherapy", physiotherapyCdParameter, physiotherapyDescParameter)
    End Function

    Public Overridable Function usp_UpdateRadiology(radiologyCd As String, radiologyDesc As String) As Integer
        Dim radiologyCdParameter As ObjectParameter = If(radiologyCd IsNot Nothing, New ObjectParameter("RadiologyCd", radiologyCd), New ObjectParameter("RadiologyCd", GetType(String)))

        Dim radiologyDescParameter As ObjectParameter = If(radiologyDesc IsNot Nothing, New ObjectParameter("RadiologyDesc", radiologyDesc), New ObjectParameter("RadiologyDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateRadiology", radiologyCdParameter, radiologyDescParameter)
    End Function

    Public Overridable Function usp_UpdateRadiologyLab(radiologyLabID As Nullable(Of Integer), radiologyLabName As String, ownerName As String, addressLine1 As String, addressLine2 As String, city As String, state As String, country As String, homePhone As String, businessPhone As String, emailAddress As String, pinCode As String, faxNumber As String, modifiedByUserID As Nullable(Of Integer)) As Integer
        Dim radiologyLabIDParameter As ObjectParameter = If(radiologyLabID.HasValue, New ObjectParameter("RadiologyLabID", radiologyLabID), New ObjectParameter("RadiologyLabID", GetType(Integer)))

        Dim radiologyLabNameParameter As ObjectParameter = If(radiologyLabName IsNot Nothing, New ObjectParameter("RadiologyLabName", radiologyLabName), New ObjectParameter("RadiologyLabName", GetType(String)))

        Dim ownerNameParameter As ObjectParameter = If(ownerName IsNot Nothing, New ObjectParameter("OwnerName", ownerName), New ObjectParameter("OwnerName", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim businessPhoneParameter As ObjectParameter = If(businessPhone IsNot Nothing, New ObjectParameter("BusinessPhone", businessPhone), New ObjectParameter("BusinessPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim faxNumberParameter As ObjectParameter = If(faxNumber IsNot Nothing, New ObjectParameter("FaxNumber", faxNumber), New ObjectParameter("FaxNumber", GetType(String)))

        Dim modifiedByUserIDParameter As ObjectParameter = If(modifiedByUserID.HasValue, New ObjectParameter("ModifiedByUserID", modifiedByUserID), New ObjectParameter("ModifiedByUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateRadiologyLab", radiologyLabIDParameter, radiologyLabNameParameter, ownerNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, countryParameter, homePhoneParameter, businessPhoneParameter, emailAddressParameter, pinCodeParameter, faxNumberParameter, modifiedByUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateStaff(staffID As Nullable(Of Integer), lastName As String, firstName As String, dOB As String, joinDate As Nullable(Of Date), staffCatCd As String, title As String, addressLine1 As String, addressLine2 As String, city As String, state As String, pinCode As String, country As String, homePhone As String, otherPhone As String, emailAddress As String, genderCd As String, modifiedUserID As Nullable(Of Integer)) As Integer
        Dim staffIDParameter As ObjectParameter = If(staffID.HasValue, New ObjectParameter("StaffID", staffID), New ObjectParameter("StaffID", GetType(Integer)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB IsNot Nothing, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(String)))

        Dim joinDateParameter As ObjectParameter = If(joinDate.HasValue, New ObjectParameter("JoinDate", joinDate), New ObjectParameter("JoinDate", GetType(Date)))

        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("Title", title), New ObjectParameter("Title", GetType(String)))

        Dim addressLine1Parameter As ObjectParameter = If(addressLine1 IsNot Nothing, New ObjectParameter("AddressLine1", addressLine1), New ObjectParameter("AddressLine1", GetType(String)))

        Dim addressLine2Parameter As ObjectParameter = If(addressLine2 IsNot Nothing, New ObjectParameter("AddressLine2", addressLine2), New ObjectParameter("AddressLine2", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim stateParameter As ObjectParameter = If(state IsNot Nothing, New ObjectParameter("State", state), New ObjectParameter("State", GetType(String)))

        Dim pinCodeParameter As ObjectParameter = If(pinCode IsNot Nothing, New ObjectParameter("PinCode", pinCode), New ObjectParameter("PinCode", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim homePhoneParameter As ObjectParameter = If(homePhone IsNot Nothing, New ObjectParameter("HomePhone", homePhone), New ObjectParameter("HomePhone", GetType(String)))

        Dim otherPhoneParameter As ObjectParameter = If(otherPhone IsNot Nothing, New ObjectParameter("OtherPhone", otherPhone), New ObjectParameter("OtherPhone", GetType(String)))

        Dim emailAddressParameter As ObjectParameter = If(emailAddress IsNot Nothing, New ObjectParameter("EmailAddress", emailAddress), New ObjectParameter("EmailAddress", GetType(String)))

        Dim genderCdParameter As ObjectParameter = If(genderCd IsNot Nothing, New ObjectParameter("GenderCd", genderCd), New ObjectParameter("GenderCd", GetType(String)))

        Dim modifiedUserIDParameter As ObjectParameter = If(modifiedUserID.HasValue, New ObjectParameter("ModifiedUserID", modifiedUserID), New ObjectParameter("ModifiedUserID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateStaff", staffIDParameter, lastNameParameter, firstNameParameter, dOBParameter, joinDateParameter, staffCatCdParameter, titleParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, stateParameter, pinCodeParameter, countryParameter, homePhoneParameter, otherPhoneParameter, emailAddressParameter, genderCdParameter, modifiedUserIDParameter)
    End Function

    Public Overridable Function usp_UpdateStaffCategory(staffCatCd As String, staffCatDesc As String) As Integer
        Dim staffCatCdParameter As ObjectParameter = If(staffCatCd IsNot Nothing, New ObjectParameter("StaffCatCd", staffCatCd), New ObjectParameter("StaffCatCd", GetType(String)))

        Dim staffCatDescParameter As ObjectParameter = If(staffCatDesc IsNot Nothing, New ObjectParameter("StaffCatDesc", staffCatDesc), New ObjectParameter("StaffCatDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateStaffCategory", staffCatCdParameter, staffCatDescParameter)
    End Function

    Public Overridable Function usp_UpdateVisionCare(visionCareCd As String, visionCareDesc As String) As Integer
        Dim visionCareCdParameter As ObjectParameter = If(visionCareCd IsNot Nothing, New ObjectParameter("VisionCareCd", visionCareCd), New ObjectParameter("VisionCareCd", GetType(String)))

        Dim visionCareDescParameter As ObjectParameter = If(visionCareDesc IsNot Nothing, New ObjectParameter("VisionCareDesc", visionCareDesc), New ObjectParameter("VisionCareDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateVisionCare", visionCareCdParameter, visionCareDescParameter)
    End Function

    Public Overridable Function usp_UpdateVisitRecordParameter(parameterCd As String, parameterDesc As String) As Integer
        Dim parameterCdParameter As ObjectParameter = If(parameterCd IsNot Nothing, New ObjectParameter("ParameterCd", parameterCd), New ObjectParameter("ParameterCd", GetType(String)))

        Dim parameterDescParameter As ObjectParameter = If(parameterDesc IsNot Nothing, New ObjectParameter("ParameterDesc", parameterDesc), New ObjectParameter("ParameterDesc", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_UpdateVisitRecordParameter", parameterCdParameter, parameterDescParameter)
    End Function

End Class
